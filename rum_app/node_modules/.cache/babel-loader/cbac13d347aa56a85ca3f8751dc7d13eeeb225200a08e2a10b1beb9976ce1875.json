{"ast":null,"code":"/* eslint-disable no-console, local-rules/disallow-side-effects */\n/**\n * Keep references on console methods to avoid triggering patched behaviors\n *\n * NB: in some setup, console could already be patched by another SDK.\n * In this case, some display messages can be sent by the other SDK\n * but we should be safe from infinite loop nonetheless.\n */\nexport var ConsoleApiName = {\n  log: 'log',\n  debug: 'debug',\n  info: 'info',\n  warn: 'warn',\n  error: 'error'\n};\nexport var display = function (api) {\n  var args = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    args[_i - 1] = arguments[_i];\n  }\n  if (!Object.prototype.hasOwnProperty.call(ConsoleApiName, api)) {\n    api = ConsoleApiName.log;\n  }\n  display[api].apply(display, args);\n};\ndisplay.debug = console.debug.bind(console);\ndisplay.log = console.log.bind(console);\ndisplay.info = console.info.bind(console);\ndisplay.warn = console.warn.bind(console);\ndisplay.error = console.error.bind(console);","map":{"version":3,"names":["ConsoleApiName","log","debug","info","warn","error","display","api","args","_i","arguments","length","Object","prototype","hasOwnProperty","call","apply","console","bind"],"sources":["/Users/sean.dever/Desktop/PersonalRepos/apm-enablement-sessions/rum_and_trace_correlation/rum_app/node_modules/@datadog/browser-core/src/tools/display.ts"],"sourcesContent":["/* eslint-disable no-console, local-rules/disallow-side-effects */\n/**\n * Keep references on console methods to avoid triggering patched behaviors\n *\n * NB: in some setup, console could already be patched by another SDK.\n * In this case, some display messages can be sent by the other SDK\n * but we should be safe from infinite loop nonetheless.\n */\n\nexport const ConsoleApiName = {\n  log: 'log',\n  debug: 'debug',\n  info: 'info',\n  warn: 'warn',\n  error: 'error',\n} as const\n\nexport type ConsoleApiName = typeof ConsoleApiName[keyof typeof ConsoleApiName]\n\ninterface Display {\n  (api: ConsoleApiName, ...args: any[]): void\n  debug: typeof console.debug\n  log: typeof console.log\n  info: typeof console.info\n  warn: typeof console.warn\n  error: typeof console.error\n}\n\nexport const display: Display = (api, ...args) => {\n  if (!Object.prototype.hasOwnProperty.call(ConsoleApiName, api)) {\n    api = ConsoleApiName.log\n  }\n  display[api](...args)\n}\n\ndisplay.debug = console.debug.bind(console)\ndisplay.log = console.log.bind(console)\ndisplay.info = console.info.bind(console)\ndisplay.warn = console.warn.bind(console)\ndisplay.error = console.error.bind(console)\n"],"mappings":"AAAA;AACA;;;;;;;AAQA,OAAO,IAAMA,cAAc,GAAG;EAC5BC,GAAG,EAAE,KAAK;EACVC,KAAK,EAAE,OAAO;EACdC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE;CACC;AAaV,OAAO,IAAMC,OAAO,GAAY,SAAAA,CAACC,GAAG;EAAE,IAAAC,IAAA;OAAA,IAAAC,EAAA,IAAO,EAAPA,EAAA,GAAAC,SAAA,CAAAC,MAAO,EAAPF,EAAA,EAAO;IAAPD,IAAA,CAAAC,EAAA,QAAAC,SAAA,CAAAD,EAAA;;EACpC,IAAI,CAACG,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACf,cAAc,EAAEO,GAAG,CAAC,EAAE;IAC9DA,GAAG,GAAGP,cAAc,CAACC,GAAG;;EAE1BK,OAAO,CAACC,GAAG,CAAC,CAAAS,KAAA,CAAZV,OAAO,EAASE,IAAI;AACtB,CAAC;AAEDF,OAAO,CAACJ,KAAK,GAAGe,OAAO,CAACf,KAAK,CAACgB,IAAI,CAACD,OAAO,CAAC;AAC3CX,OAAO,CAACL,GAAG,GAAGgB,OAAO,CAAChB,GAAG,CAACiB,IAAI,CAACD,OAAO,CAAC;AACvCX,OAAO,CAACH,IAAI,GAAGc,OAAO,CAACd,IAAI,CAACe,IAAI,CAACD,OAAO,CAAC;AACzCX,OAAO,CAACF,IAAI,GAAGa,OAAO,CAACb,IAAI,CAACc,IAAI,CAACD,OAAO,CAAC;AACzCX,OAAO,CAACD,KAAK,GAAGY,OAAO,CAACZ,KAAK,CAACa,IAAI,CAACD,OAAO,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}