{"ast":null,"code":"import { addTelemetryDebug, isExperimentalFeatureEnabled } from '@datadog/browser-core';\nimport { startMutationObserver } from './mutationObserver';\nimport { initInputObserver } from './observers';\nexport var initShadowRootsController = function (configuration, _a) {\n  var mutationCb = _a.mutationCb,\n    inputCb = _a.inputCb;\n  var controllerByShadowRoot = new Map();\n  var shadowRootsController = {\n    addShadowRoot: function (shadowRoot) {\n      var _a = startMutationObserver(mutationCb, configuration, shadowRootsController, shadowRoot),\n        stopMutationObserver = _a.stop,\n        flush = _a.flush;\n      // the change event no do bubble up across the shadow root, we have to listen on the shadow root\n      var stopInputObserver = initInputObserver(inputCb, configuration.defaultPrivacyLevel, {\n        target: shadowRoot,\n        domEvents: [\"change\" /* CHANGE */]\n      });\n\n      controllerByShadowRoot.set(shadowRoot, {\n        flush: flush,\n        stop: function () {\n          stopMutationObserver();\n          stopInputObserver();\n        }\n      });\n    },\n    removeShadowRoot: function (shadowRoot) {\n      var entry = controllerByShadowRoot.get(shadowRoot);\n      if (!entry) {\n        addTelemetryDebug('no shadow root in map', {\n          shadowRoot: shadowRoot ? shadowRoot.nodeName : 'no node name',\n          childrenLength: shadowRoot ? shadowRoot.childElementCount : '-1',\n          controllerByShadowRootSize: controllerByShadowRoot.size,\n          html: shadowRoot && isExperimentalFeatureEnabled('shadow_dom_debug') ? shadowRoot.innerHTML.substring(0, 2000) : undefined\n        });\n        return;\n      }\n      entry.stop();\n      controllerByShadowRoot.delete(shadowRoot);\n    },\n    stop: function () {\n      controllerByShadowRoot.forEach(function (_a) {\n        var stop = _a.stop;\n        return stop();\n      });\n    },\n    flush: function () {\n      controllerByShadowRoot.forEach(function (_a) {\n        var flush = _a.flush;\n        return flush();\n      });\n    }\n  };\n  return shadowRootsController;\n};","map":{"version":3,"names":["addTelemetryDebug","isExperimentalFeatureEnabled","startMutationObserver","initInputObserver","initShadowRootsController","configuration","_a","mutationCb","inputCb","controllerByShadowRoot","Map","shadowRootsController","addShadowRoot","shadowRoot","stopMutationObserver","stop","flush","stopInputObserver","defaultPrivacyLevel","target","domEvents","set","removeShadowRoot","entry","get","nodeName","childrenLength","childElementCount","controllerByShadowRootSize","size","html","innerHTML","substring","undefined","delete","forEach"],"sources":["/Users/sean.dever/Desktop/PersonalRepos/rum_and_trace_correlation/rum_app/node_modules/@datadog/browser-rum/src/domain/record/shadowRootsController.ts"],"sourcesContent":["import { addTelemetryDebug, DOM_EVENT, isExperimentalFeatureEnabled } from '@datadog/browser-core'\nimport type { RumConfiguration } from '@datadog/browser-rum-core'\nimport { startMutationObserver } from './mutationObserver'\nimport { initInputObserver } from './observers'\nimport type { MutationCallBack, InputCallback } from './observers'\n\ninterface ShadowRootController {\n  stop: () => void\n  flush: () => void\n}\n\nexport type ShadowRootCallBack = (shadowRoot: ShadowRoot) => void\n\nexport interface ShadowRootsController {\n  addShadowRoot: ShadowRootCallBack\n  removeShadowRoot: ShadowRootCallBack\n  stop: () => void\n  flush: () => void\n}\n\nexport const initShadowRootsController = (\n  configuration: RumConfiguration,\n  {\n    mutationCb,\n    inputCb,\n  }: {\n    mutationCb: MutationCallBack\n    inputCb: InputCallback\n  }\n): ShadowRootsController => {\n  const controllerByShadowRoot = new Map<ShadowRoot, ShadowRootController>()\n\n  const shadowRootsController: ShadowRootsController = {\n    addShadowRoot: (shadowRoot: ShadowRoot) => {\n      const { stop: stopMutationObserver, flush } = startMutationObserver(\n        mutationCb,\n        configuration,\n        shadowRootsController,\n        shadowRoot\n      )\n      // the change event no do bubble up across the shadow root, we have to listen on the shadow root\n      const stopInputObserver = initInputObserver(inputCb, configuration.defaultPrivacyLevel, {\n        target: shadowRoot,\n        domEvents: [DOM_EVENT.CHANGE],\n      })\n      controllerByShadowRoot.set(shadowRoot, {\n        flush,\n        stop: () => {\n          stopMutationObserver()\n          stopInputObserver()\n        },\n      })\n    },\n    removeShadowRoot: (shadowRoot: ShadowRoot) => {\n      const entry = controllerByShadowRoot.get(shadowRoot)\n      if (!entry) {\n        addTelemetryDebug('no shadow root in map', {\n          shadowRoot: shadowRoot ? shadowRoot.nodeName : 'no node name',\n          childrenLength: shadowRoot ? shadowRoot.childElementCount : '-1',\n          controllerByShadowRootSize: controllerByShadowRoot.size,\n          html:\n            shadowRoot && isExperimentalFeatureEnabled('shadow_dom_debug')\n              ? shadowRoot.innerHTML.substring(0, 2000)\n              : undefined,\n        })\n        return\n      }\n      entry.stop()\n      controllerByShadowRoot.delete(shadowRoot)\n    },\n    stop: () => {\n      controllerByShadowRoot.forEach(({ stop }) => stop())\n    },\n    flush: () => {\n      controllerByShadowRoot.forEach(({ flush }) => flush())\n    },\n  }\n  return shadowRootsController\n}\n"],"mappings":"AAAA,SAASA,iBAAiB,EAAaC,4BAA4B,QAAQ,uBAAuB;AAElG,SAASC,qBAAqB,QAAQ,oBAAoB;AAC1D,SAASC,iBAAiB,QAAQ,aAAa;AAiB/C,OAAO,IAAMC,yBAAyB,GAAG,SAAAA,CACvCC,aAA+B,EAC/BC,EAMC;MALCC,UAAU,GAAAD,EAAA,CAAAC,UAAA;IACVC,OAAO,GAAAF,EAAA,CAAAE,OAAA;EAMT,IAAMC,sBAAsB,GAAG,IAAIC,GAAG,EAAoC;EAE1E,IAAMC,qBAAqB,GAA0B;IACnDC,aAAa,EAAE,SAAAA,CAACC,UAAsB;MAC9B,IAAAP,EAAA,GAAwCJ,qBAAqB,CACjEK,UAAU,EACVF,aAAa,EACbM,qBAAqB,EACrBE,UAAU,CACX;QALaC,oBAAoB,GAAAR,EAAA,CAAAS,IAAA;QAAEC,KAAK,GAAAV,EAAA,CAAAU,KAKxC;MACD;MACA,IAAMC,iBAAiB,GAAGd,iBAAiB,CAACK,OAAO,EAAEH,aAAa,CAACa,mBAAmB,EAAE;QACtFC,MAAM,EAAEN,UAAU;QAClBO,SAAS,EAAE;OACZ,CAAC;;MACFX,sBAAsB,CAACY,GAAG,CAACR,UAAU,EAAE;QACrCG,KAAK,EAAAA,KAAA;QACLD,IAAI,EAAE,SAAAA,CAAA;UACJD,oBAAoB,EAAE;UACtBG,iBAAiB,EAAE;QACrB;OACD,CAAC;IACJ,CAAC;IACDK,gBAAgB,EAAE,SAAAA,CAACT,UAAsB;MACvC,IAAMU,KAAK,GAAGd,sBAAsB,CAACe,GAAG,CAACX,UAAU,CAAC;MACpD,IAAI,CAACU,KAAK,EAAE;QACVvB,iBAAiB,CAAC,uBAAuB,EAAE;UACzCa,UAAU,EAAEA,UAAU,GAAGA,UAAU,CAACY,QAAQ,GAAG,cAAc;UAC7DC,cAAc,EAAEb,UAAU,GAAGA,UAAU,CAACc,iBAAiB,GAAG,IAAI;UAChEC,0BAA0B,EAAEnB,sBAAsB,CAACoB,IAAI;UACvDC,IAAI,EACFjB,UAAU,IAAIZ,4BAA4B,CAAC,kBAAkB,CAAC,GAC1DY,UAAU,CAACkB,SAAS,CAACC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,GACvCC;SACP,CAAC;QACF;;MAEFV,KAAK,CAACR,IAAI,EAAE;MACZN,sBAAsB,CAACyB,MAAM,CAACrB,UAAU,CAAC;IAC3C,CAAC;IACDE,IAAI,EAAE,SAAAA,CAAA;MACJN,sBAAsB,CAAC0B,OAAO,CAAC,UAAC7B,EAAQ;YAANS,IAAI,GAAAT,EAAA,CAAAS,IAAA;QAAO,OAAAA,IAAI,EAAE;MAAN,CAAM,CAAC;IACtD,CAAC;IACDC,KAAK,EAAE,SAAAA,CAAA;MACLP,sBAAsB,CAAC0B,OAAO,CAAC,UAAC7B,EAAS;YAAPU,KAAK,GAAAV,EAAA,CAAAU,KAAA;QAAO,OAAAA,KAAK,EAAE;MAAP,CAAO,CAAC;IACxD;GACD;EACD,OAAOL,qBAAqB;AAC9B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}