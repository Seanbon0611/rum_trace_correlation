{"ast":null,"code":"import { addDuration, addEventListener, elapsed, relativeNow, toServerDuration } from '@datadog/browser-core';\n// Arbitrary value to cap number of element mostly for backend & to save bandwidth\nexport var MAX_NUMBER_OF_SELECTABLE_FOREGROUND_PERIODS = 500;\n// Arbitrary value to cap number of element mostly for memory consumption in the browser\nexport var MAX_NUMBER_OF_STORED_FOREGROUND_PERIODS = 2500;\nvar foregroundPeriods = [];\nexport function startForegroundContexts() {\n  if (document.hasFocus()) {\n    addNewForegroundPeriod();\n  }\n  var stopForegroundTracking = trackFocus(addNewForegroundPeriod).stop;\n  var stopBlurTracking = trackBlur(closeForegroundPeriod).stop;\n  return {\n    isInForegroundAt: isInForegroundAt,\n    selectInForegroundPeriodsFor: selectInForegroundPeriodsFor,\n    stop: function () {\n      foregroundPeriods = [];\n      stopForegroundTracking();\n      stopBlurTracking();\n    }\n  };\n}\nexport function addNewForegroundPeriod() {\n  if (foregroundPeriods.length > MAX_NUMBER_OF_STORED_FOREGROUND_PERIODS) {\n    return;\n  }\n  var currentForegroundPeriod = foregroundPeriods[foregroundPeriods.length - 1];\n  var now = relativeNow();\n  if (currentForegroundPeriod !== undefined && currentForegroundPeriod.end === undefined) {\n    return;\n  }\n  foregroundPeriods.push({\n    start: now\n  });\n}\nexport function closeForegroundPeriod() {\n  if (foregroundPeriods.length === 0) {\n    return;\n  }\n  var currentForegroundPeriod = foregroundPeriods[foregroundPeriods.length - 1];\n  var now = relativeNow();\n  if (currentForegroundPeriod.end !== undefined) {\n    return;\n  }\n  currentForegroundPeriod.end = now;\n}\nfunction trackFocus(onFocusChange) {\n  return addEventListener(window, \"focus\" /* FOCUS */, function (event) {\n    if (!event.isTrusted) {\n      return;\n    }\n    onFocusChange();\n  });\n}\nfunction trackBlur(onBlurChange) {\n  return addEventListener(window, \"blur\" /* BLUR */, function (event) {\n    if (!event.isTrusted) {\n      return;\n    }\n    onBlurChange();\n  });\n}\nfunction isInForegroundAt(startTime) {\n  for (var i = foregroundPeriods.length - 1; i >= 0; i--) {\n    var foregroundPeriod = foregroundPeriods[i];\n    if (foregroundPeriod.end !== undefined && startTime > foregroundPeriod.end) {\n      break;\n    }\n    if (startTime > foregroundPeriod.start && (foregroundPeriod.end === undefined || startTime < foregroundPeriod.end)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction selectInForegroundPeriodsFor(eventStartTime, duration) {\n  var eventEndTime = addDuration(eventStartTime, duration);\n  var filteredForegroundPeriods = [];\n  var earliestIndex = Math.max(0, foregroundPeriods.length - MAX_NUMBER_OF_SELECTABLE_FOREGROUND_PERIODS);\n  for (var i = foregroundPeriods.length - 1; i >= earliestIndex; i--) {\n    var foregroundPeriod = foregroundPeriods[i];\n    if (foregroundPeriod.end !== undefined && eventStartTime > foregroundPeriod.end) {\n      // event starts after the end of the current focus period\n      // since the array is sorted, we can stop looking for foreground periods\n      break;\n    }\n    if (eventEndTime < foregroundPeriod.start) {\n      // event ends before the start of the current focus period\n      // continue to previous one\n      continue;\n    }\n    var startTime = eventStartTime > foregroundPeriod.start ? eventStartTime : foregroundPeriod.start;\n    var startDuration = elapsed(eventStartTime, startTime);\n    var endTime = foregroundPeriod.end === undefined || eventEndTime < foregroundPeriod.end ? eventEndTime : foregroundPeriod.end;\n    var endDuration = elapsed(startTime, endTime);\n    filteredForegroundPeriods.unshift({\n      start: toServerDuration(startDuration),\n      duration: toServerDuration(endDuration)\n    });\n  }\n  return filteredForegroundPeriods;\n}","map":{"version":3,"names":["addDuration","addEventListener","elapsed","relativeNow","toServerDuration","MAX_NUMBER_OF_SELECTABLE_FOREGROUND_PERIODS","MAX_NUMBER_OF_STORED_FOREGROUND_PERIODS","foregroundPeriods","startForegroundContexts","document","hasFocus","addNewForegroundPeriod","stopForegroundTracking","trackFocus","stop","stopBlurTracking","trackBlur","closeForegroundPeriod","isInForegroundAt","selectInForegroundPeriodsFor","length","currentForegroundPeriod","now","undefined","end","push","start","onFocusChange","window","event","isTrusted","onBlurChange","startTime","i","foregroundPeriod","eventStartTime","duration","eventEndTime","filteredForegroundPeriods","earliestIndex","Math","max","startDuration","endTime","endDuration","unshift"],"sources":["/Users/sean.dever/Desktop/PersonalRepos/apm-enablement-sessions/rum_and_trace_correlation/rum_app/node_modules/@datadog/browser-rum-core/src/domain/contexts/foregroundContexts.ts"],"sourcesContent":["import type { RelativeTime, Duration } from '@datadog/browser-core'\nimport { addDuration, addEventListener, DOM_EVENT, elapsed, relativeNow, toServerDuration } from '@datadog/browser-core'\nimport type { InForegroundPeriod } from '../../rawRumEvent.types'\n\n// Arbitrary value to cap number of element mostly for backend & to save bandwidth\nexport const MAX_NUMBER_OF_SELECTABLE_FOREGROUND_PERIODS = 500\n// Arbitrary value to cap number of element mostly for memory consumption in the browser\nexport const MAX_NUMBER_OF_STORED_FOREGROUND_PERIODS = 2500\n\nexport interface ForegroundContexts {\n  isInForegroundAt: (startTime: RelativeTime) => boolean | undefined\n  selectInForegroundPeriodsFor: (startTime: RelativeTime, duration: Duration) => InForegroundPeriod[] | undefined\n  stop: () => void\n}\n\nexport interface ForegroundPeriod {\n  start: RelativeTime\n  end?: RelativeTime\n}\n\nlet foregroundPeriods: ForegroundPeriod[] = []\n\nexport function startForegroundContexts(): ForegroundContexts {\n  if (document.hasFocus()) {\n    addNewForegroundPeriod()\n  }\n\n  const { stop: stopForegroundTracking } = trackFocus(addNewForegroundPeriod)\n  const { stop: stopBlurTracking } = trackBlur(closeForegroundPeriod)\n  return {\n    isInForegroundAt,\n    selectInForegroundPeriodsFor,\n    stop: () => {\n      foregroundPeriods = []\n      stopForegroundTracking()\n      stopBlurTracking()\n    },\n  }\n}\n\nexport function addNewForegroundPeriod() {\n  if (foregroundPeriods.length > MAX_NUMBER_OF_STORED_FOREGROUND_PERIODS) {\n    return\n  }\n  const currentForegroundPeriod = foregroundPeriods[foregroundPeriods.length - 1]\n  const now = relativeNow()\n  if (currentForegroundPeriod !== undefined && currentForegroundPeriod.end === undefined) {\n    return\n  }\n  foregroundPeriods.push({\n    start: now,\n  })\n}\n\nexport function closeForegroundPeriod() {\n  if (foregroundPeriods.length === 0) {\n    return\n  }\n  const currentForegroundPeriod = foregroundPeriods[foregroundPeriods.length - 1]\n  const now = relativeNow()\n  if (currentForegroundPeriod.end !== undefined) {\n    return\n  }\n  currentForegroundPeriod.end = now\n}\n\nfunction trackFocus(onFocusChange: () => void) {\n  return addEventListener(window, DOM_EVENT.FOCUS, (event) => {\n    if (!event.isTrusted) {\n      return\n    }\n    onFocusChange()\n  })\n}\n\nfunction trackBlur(onBlurChange: () => void) {\n  return addEventListener(window, DOM_EVENT.BLUR, (event) => {\n    if (!event.isTrusted) {\n      return\n    }\n    onBlurChange()\n  })\n}\n\nfunction isInForegroundAt(startTime: RelativeTime): boolean {\n  for (let i = foregroundPeriods.length - 1; i >= 0; i--) {\n    const foregroundPeriod = foregroundPeriods[i]\n    if (foregroundPeriod.end !== undefined && startTime > foregroundPeriod.end) {\n      break\n    }\n    if (\n      startTime > foregroundPeriod.start &&\n      (foregroundPeriod.end === undefined || startTime < foregroundPeriod.end)\n    ) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction selectInForegroundPeriodsFor(eventStartTime: RelativeTime, duration: Duration): InForegroundPeriod[] {\n  const eventEndTime = addDuration(eventStartTime, duration)\n  const filteredForegroundPeriods: InForegroundPeriod[] = []\n\n  const earliestIndex = Math.max(0, foregroundPeriods.length - MAX_NUMBER_OF_SELECTABLE_FOREGROUND_PERIODS)\n  for (let i = foregroundPeriods.length - 1; i >= earliestIndex; i--) {\n    const foregroundPeriod = foregroundPeriods[i]\n    if (foregroundPeriod.end !== undefined && eventStartTime > foregroundPeriod.end) {\n      // event starts after the end of the current focus period\n      // since the array is sorted, we can stop looking for foreground periods\n      break\n    }\n    if (eventEndTime < foregroundPeriod.start) {\n      // event ends before the start of the current focus period\n      // continue to previous one\n      continue\n    }\n    const startTime = eventStartTime > foregroundPeriod.start ? eventStartTime : foregroundPeriod.start\n    const startDuration = elapsed(eventStartTime, startTime)\n    const endTime =\n      foregroundPeriod.end === undefined || eventEndTime < foregroundPeriod.end ? eventEndTime : foregroundPeriod.end\n    const endDuration = elapsed(startTime, endTime)\n    filteredForegroundPeriods.unshift({\n      start: toServerDuration(startDuration),\n      duration: toServerDuration(endDuration),\n    })\n  }\n  return filteredForegroundPeriods\n}\n"],"mappings":"AACA,SAASA,WAAW,EAAEC,gBAAgB,EAAaC,OAAO,EAAEC,WAAW,EAAEC,gBAAgB,QAAQ,uBAAuB;AAGxH;AACA,OAAO,IAAMC,2CAA2C,GAAG,GAAG;AAC9D;AACA,OAAO,IAAMC,uCAAuC,GAAG,IAAI;AAa3D,IAAIC,iBAAiB,GAAuB,EAAE;AAE9C,OAAM,SAAUC,uBAAuBA,CAAA;EACrC,IAAIC,QAAQ,CAACC,QAAQ,EAAE,EAAE;IACvBC,sBAAsB,EAAE;;EAGlB,IAAMC,sBAAsB,GAAKC,UAAU,CAACF,sBAAsB,CAAC,CAAAG,IAAvC;EAC5B,IAAMC,gBAAgB,GAAKC,SAAS,CAACC,qBAAqB,CAAC,CAAAH,IAArC;EAC9B,OAAO;IACLI,gBAAgB,EAAAA,gBAAA;IAChBC,4BAA4B,EAAAA,4BAAA;IAC5BL,IAAI,EAAE,SAAAA,CAAA;MACJP,iBAAiB,GAAG,EAAE;MACtBK,sBAAsB,EAAE;MACxBG,gBAAgB,EAAE;IACpB;GACD;AACH;AAEA,OAAM,SAAUJ,sBAAsBA,CAAA;EACpC,IAAIJ,iBAAiB,CAACa,MAAM,GAAGd,uCAAuC,EAAE;IACtE;;EAEF,IAAMe,uBAAuB,GAAGd,iBAAiB,CAACA,iBAAiB,CAACa,MAAM,GAAG,CAAC,CAAC;EAC/E,IAAME,GAAG,GAAGnB,WAAW,EAAE;EACzB,IAAIkB,uBAAuB,KAAKE,SAAS,IAAIF,uBAAuB,CAACG,GAAG,KAAKD,SAAS,EAAE;IACtF;;EAEFhB,iBAAiB,CAACkB,IAAI,CAAC;IACrBC,KAAK,EAAEJ;GACR,CAAC;AACJ;AAEA,OAAM,SAAUL,qBAAqBA,CAAA;EACnC,IAAIV,iBAAiB,CAACa,MAAM,KAAK,CAAC,EAAE;IAClC;;EAEF,IAAMC,uBAAuB,GAAGd,iBAAiB,CAACA,iBAAiB,CAACa,MAAM,GAAG,CAAC,CAAC;EAC/E,IAAME,GAAG,GAAGnB,WAAW,EAAE;EACzB,IAAIkB,uBAAuB,CAACG,GAAG,KAAKD,SAAS,EAAE;IAC7C;;EAEFF,uBAAuB,CAACG,GAAG,GAAGF,GAAG;AACnC;AAEA,SAAST,UAAUA,CAACc,aAAyB;EAC3C,OAAO1B,gBAAgB,CAAC2B,MAAM,uBAAmB,UAACC,KAAK;IACrD,IAAI,CAACA,KAAK,CAACC,SAAS,EAAE;MACpB;;IAEFH,aAAa,EAAE;EACjB,CAAC,CAAC;AACJ;AAEA,SAASX,SAASA,CAACe,YAAwB;EACzC,OAAO9B,gBAAgB,CAAC2B,MAAM,qBAAkB,UAACC,KAAK;IACpD,IAAI,CAACA,KAAK,CAACC,SAAS,EAAE;MACpB;;IAEFC,YAAY,EAAE;EAChB,CAAC,CAAC;AACJ;AAEA,SAASb,gBAAgBA,CAACc,SAAuB;EAC/C,KAAK,IAAIC,CAAC,GAAG1B,iBAAiB,CAACa,MAAM,GAAG,CAAC,EAAEa,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IACtD,IAAMC,gBAAgB,GAAG3B,iBAAiB,CAAC0B,CAAC,CAAC;IAC7C,IAAIC,gBAAgB,CAACV,GAAG,KAAKD,SAAS,IAAIS,SAAS,GAAGE,gBAAgB,CAACV,GAAG,EAAE;MAC1E;;IAEF,IACEQ,SAAS,GAAGE,gBAAgB,CAACR,KAAK,KACjCQ,gBAAgB,CAACV,GAAG,KAAKD,SAAS,IAAIS,SAAS,GAAGE,gBAAgB,CAACV,GAAG,CAAC,EACxE;MACA,OAAO,IAAI;;;EAGf,OAAO,KAAK;AACd;AAEA,SAASL,4BAA4BA,CAACgB,cAA4B,EAAEC,QAAkB;EACpF,IAAMC,YAAY,GAAGrC,WAAW,CAACmC,cAAc,EAAEC,QAAQ,CAAC;EAC1D,IAAME,yBAAyB,GAAyB,EAAE;EAE1D,IAAMC,aAAa,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAElC,iBAAiB,CAACa,MAAM,GAAGf,2CAA2C,CAAC;EACzG,KAAK,IAAI4B,CAAC,GAAG1B,iBAAiB,CAACa,MAAM,GAAG,CAAC,EAAEa,CAAC,IAAIM,aAAa,EAAEN,CAAC,EAAE,EAAE;IAClE,IAAMC,gBAAgB,GAAG3B,iBAAiB,CAAC0B,CAAC,CAAC;IAC7C,IAAIC,gBAAgB,CAACV,GAAG,KAAKD,SAAS,IAAIY,cAAc,GAAGD,gBAAgB,CAACV,GAAG,EAAE;MAC/E;MACA;MACA;;IAEF,IAAIa,YAAY,GAAGH,gBAAgB,CAACR,KAAK,EAAE;MACzC;MACA;MACA;;IAEF,IAAMM,SAAS,GAAGG,cAAc,GAAGD,gBAAgB,CAACR,KAAK,GAAGS,cAAc,GAAGD,gBAAgB,CAACR,KAAK;IACnG,IAAMgB,aAAa,GAAGxC,OAAO,CAACiC,cAAc,EAAEH,SAAS,CAAC;IACxD,IAAMW,OAAO,GACXT,gBAAgB,CAACV,GAAG,KAAKD,SAAS,IAAIc,YAAY,GAAGH,gBAAgB,CAACV,GAAG,GAAGa,YAAY,GAAGH,gBAAgB,CAACV,GAAG;IACjH,IAAMoB,WAAW,GAAG1C,OAAO,CAAC8B,SAAS,EAAEW,OAAO,CAAC;IAC/CL,yBAAyB,CAACO,OAAO,CAAC;MAChCnB,KAAK,EAAEtB,gBAAgB,CAACsC,aAAa,CAAC;MACtCN,QAAQ,EAAEhC,gBAAgB,CAACwC,WAAW;KACvC,CAAC;;EAEJ,OAAON,yBAAyB;AAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}