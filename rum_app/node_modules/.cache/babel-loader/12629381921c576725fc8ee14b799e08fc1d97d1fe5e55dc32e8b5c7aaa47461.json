{"ast":null,"code":"import { PageExitReason, shallowClone, assign, elapsed, generateUUID, monitor, ONE_MINUTE, throttle, clocksNow, clocksOrigin, timeStampNow, display, looksLikeRelativeTime } from '@datadog/browser-core';\nimport { trackInitialViewTimings } from './trackInitialViewTimings';\nimport { trackViewMetrics } from './trackViewMetrics';\nimport { trackViewEventCounts } from './trackViewEventCounts';\nexport var THROTTLE_VIEW_UPDATE_PERIOD = 3000;\nexport var SESSION_KEEP_ALIVE_INTERVAL = 5 * ONE_MINUTE;\nexport function trackViews(location, lifeCycle, domMutationObservable, configuration, locationChangeObservable, areViewsTrackedAutomatically, initialViewOptions) {\n  var _a = trackInitialView(initialViewOptions),\n    stopInitialViewTracking = _a.stop,\n    initialView = _a.initialView;\n  var currentView = initialView;\n  var stopViewLifeCycle = startViewLifeCycle().stop;\n  var locationChangeSubscription;\n  if (areViewsTrackedAutomatically) {\n    locationChangeSubscription = renewViewOnLocationChange(locationChangeObservable);\n  }\n  function trackInitialView(options) {\n    var initialView = newView(lifeCycle, domMutationObservable, configuration, location, \"initial_load\" /* INITIAL_LOAD */, clocksOrigin(), options);\n    var stop = trackInitialViewTimings(lifeCycle, function (timings) {\n      initialView.updateTimings(timings);\n      initialView.scheduleUpdate();\n    }).stop;\n    return {\n      initialView: initialView,\n      stop: stop\n    };\n  }\n  function trackViewChange(startClocks, viewOptions) {\n    return newView(lifeCycle, domMutationObservable, configuration, location, \"route_change\" /* ROUTE_CHANGE */, startClocks, viewOptions);\n  }\n  function startViewLifeCycle() {\n    lifeCycle.subscribe(8 /* SESSION_RENEWED */, function () {\n      // do not trigger view update to avoid wrong data\n      currentView.end();\n      // Renew view on session renewal\n      currentView = trackViewChange(undefined, {\n        name: currentView.name,\n        service: currentView.service,\n        version: currentView.version\n      });\n    });\n    // End the current view on page unload\n    lifeCycle.subscribe(9 /* PAGE_EXITED */, function (pageExitEvent) {\n      if (pageExitEvent.reason === PageExitReason.UNLOADING) {\n        currentView.end();\n        currentView.triggerUpdate();\n      }\n    });\n    // Session keep alive\n    var keepAliveInterval = window.setInterval(monitor(function () {\n      currentView.triggerUpdate();\n    }), SESSION_KEEP_ALIVE_INTERVAL);\n    return {\n      stop: function () {\n        clearInterval(keepAliveInterval);\n      }\n    };\n  }\n  function renewViewOnLocationChange(locationChangeObservable) {\n    return locationChangeObservable.subscribe(function (_a) {\n      var oldLocation = _a.oldLocation,\n        newLocation = _a.newLocation;\n      if (areDifferentLocation(oldLocation, newLocation)) {\n        currentView.end();\n        currentView.triggerUpdate();\n        currentView = trackViewChange();\n        return;\n      }\n    });\n  }\n  return {\n    addTiming: function (name, time) {\n      if (time === void 0) {\n        time = timeStampNow();\n      }\n      currentView.addTiming(name, time);\n      currentView.scheduleUpdate();\n    },\n    startView: function (options, startClocks) {\n      currentView.end(startClocks);\n      currentView.triggerUpdate();\n      currentView = trackViewChange(startClocks, options);\n    },\n    stop: function () {\n      locationChangeSubscription === null || locationChangeSubscription === void 0 ? void 0 : locationChangeSubscription.unsubscribe();\n      stopInitialViewTracking();\n      stopViewLifeCycle();\n      currentView.end();\n    }\n  };\n}\nfunction newView(lifeCycle, domMutationObservable, configuration, initialLocation, loadingType, startClocks, viewOptions) {\n  if (startClocks === void 0) {\n    startClocks = clocksNow();\n  }\n  // Setup initial values\n  var id = generateUUID();\n  var timings = {};\n  var customTimings = {};\n  var documentVersion = 0;\n  var endClocks;\n  var location = shallowClone(initialLocation);\n  var name;\n  var service;\n  var version;\n  if (viewOptions) {\n    name = viewOptions.name;\n    service = viewOptions.service;\n    version = viewOptions.version;\n  }\n  lifeCycle.notify(2 /* VIEW_CREATED */, {\n    id: id,\n    name: name,\n    startClocks: startClocks,\n    service: service,\n    version: version\n  });\n  // Update the view every time the measures are changing\n  var _a = throttle(monitor(triggerViewUpdate), THROTTLE_VIEW_UPDATE_PERIOD, {\n      leading: false\n    }),\n    scheduleViewUpdate = _a.throttled,\n    cancelScheduleViewUpdate = _a.cancel;\n  var _b = trackViewMetrics(lifeCycle, domMutationObservable, configuration, scheduleViewUpdate, loadingType, startClocks),\n    setLoadEvent = _b.setLoadEvent,\n    stopViewMetricsTracking = _b.stop,\n    viewMetrics = _b.viewMetrics;\n  var _c = trackViewEventCounts(lifeCycle, id, scheduleViewUpdate),\n    scheduleStopEventCountsTracking = _c.scheduleStop,\n    eventCounts = _c.eventCounts;\n  // Initial view update\n  triggerViewUpdate();\n  function triggerViewUpdate() {\n    documentVersion += 1;\n    var currentEnd = endClocks === undefined ? timeStampNow() : endClocks.timeStamp;\n    lifeCycle.notify(3 /* VIEW_UPDATED */, assign({\n      customTimings: customTimings,\n      documentVersion: documentVersion,\n      id: id,\n      name: name,\n      service: service,\n      version: version,\n      loadingType: loadingType,\n      location: location,\n      startClocks: startClocks,\n      timings: timings,\n      duration: elapsed(startClocks.timeStamp, currentEnd),\n      isActive: endClocks === undefined,\n      eventCounts: eventCounts\n    }, viewMetrics));\n  }\n  return {\n    name: name,\n    service: service,\n    version: version,\n    scheduleUpdate: scheduleViewUpdate,\n    end: function (clocks) {\n      if (clocks === void 0) {\n        clocks = clocksNow();\n      }\n      endClocks = clocks;\n      lifeCycle.notify(4 /* VIEW_ENDED */, {\n        endClocks: endClocks\n      });\n      stopViewMetricsTracking();\n      scheduleStopEventCountsTracking();\n    },\n    triggerUpdate: function () {\n      // cancel any pending view updates execution\n      cancelScheduleViewUpdate();\n      triggerViewUpdate();\n    },\n    updateTimings: function (newTimings) {\n      timings = newTimings;\n      if (newTimings.loadEvent !== undefined) {\n        setLoadEvent(newTimings.loadEvent);\n      }\n    },\n    addTiming: function (name, time) {\n      var relativeTime = looksLikeRelativeTime(time) ? time : elapsed(startClocks.timeStamp, time);\n      customTimings[sanitizeTiming(name)] = relativeTime;\n    }\n  };\n}\n/**\n * Timing name is used as facet path that must contain only letters, digits, or the characters - _ . @ $\n */\nfunction sanitizeTiming(name) {\n  var sanitized = name.replace(/[^a-zA-Z0-9-_.@$]/g, '_');\n  if (sanitized !== name) {\n    display.warn(\"Invalid timing name: \".concat(name, \", sanitized to: \").concat(sanitized));\n  }\n  return sanitized;\n}\nfunction areDifferentLocation(currentLocation, otherLocation) {\n  return currentLocation.pathname !== otherLocation.pathname || !isHashAnAnchor(otherLocation.hash) && getPathFromHash(otherLocation.hash) !== getPathFromHash(currentLocation.hash);\n}\nfunction isHashAnAnchor(hash) {\n  var correspondingId = hash.substr(1);\n  return !!document.getElementById(correspondingId);\n}\nfunction getPathFromHash(hash) {\n  var index = hash.indexOf('?');\n  return index < 0 ? hash : hash.slice(0, index);\n}","map":{"version":3,"names":["PageExitReason","shallowClone","assign","elapsed","generateUUID","monitor","ONE_MINUTE","throttle","clocksNow","clocksOrigin","timeStampNow","display","looksLikeRelativeTime","trackInitialViewTimings","trackViewMetrics","trackViewEventCounts","THROTTLE_VIEW_UPDATE_PERIOD","SESSION_KEEP_ALIVE_INTERVAL","trackViews","location","lifeCycle","domMutationObservable","configuration","locationChangeObservable","areViewsTrackedAutomatically","initialViewOptions","_a","trackInitialView","stopInitialViewTracking","stop","initialView","currentView","stopViewLifeCycle","startViewLifeCycle","locationChangeSubscription","renewViewOnLocationChange","options","newView","timings","updateTimings","scheduleUpdate","trackViewChange","startClocks","viewOptions","subscribe","end","undefined","name","service","version","pageExitEvent","reason","UNLOADING","triggerUpdate","keepAliveInterval","window","setInterval","clearInterval","oldLocation","newLocation","areDifferentLocation","addTiming","time","startView","unsubscribe","initialLocation","loadingType","id","customTimings","documentVersion","endClocks","notify","triggerViewUpdate","leading","scheduleViewUpdate","throttled","cancelScheduleViewUpdate","cancel","_b","setLoadEvent","stopViewMetricsTracking","viewMetrics","_c","scheduleStopEventCountsTracking","scheduleStop","eventCounts","currentEnd","timeStamp","duration","isActive","clocks","newTimings","loadEvent","relativeTime","sanitizeTiming","sanitized","replace","warn","concat","currentLocation","otherLocation","pathname","isHashAnAnchor","hash","getPathFromHash","correspondingId","substr","document","getElementById","index","indexOf","slice"],"sources":["/Users/sean.dever/Desktop/PersonalRepos/rum_and_trace_correlation/rum_app/node_modules/@datadog/browser-rum-core/src/domain/rumEventsCollection/view/trackViews.ts"],"sourcesContent":["import type { Duration, ClocksState, TimeStamp, Observable, Subscription, RelativeTime } from '@datadog/browser-core'\nimport {\n  PageExitReason,\n  shallowClone,\n  assign,\n  elapsed,\n  generateUUID,\n  monitor,\n  ONE_MINUTE,\n  throttle,\n  clocksNow,\n  clocksOrigin,\n  timeStampNow,\n  display,\n  looksLikeRelativeTime,\n} from '@datadog/browser-core'\n\nimport type { ViewCustomTimings } from '../../../rawRumEvent.types'\nimport { ViewLoadingType } from '../../../rawRumEvent.types'\n\nimport type { LifeCycle } from '../../lifeCycle'\nimport { LifeCycleEventType } from '../../lifeCycle'\nimport type { EventCounts } from '../../trackEventCounts'\nimport type { LocationChange } from '../../../browser/locationChangeObservable'\nimport type { RumConfiguration } from '../../configuration'\nimport type { Timings } from './trackInitialViewTimings'\nimport { trackInitialViewTimings } from './trackInitialViewTimings'\nimport { trackViewMetrics } from './trackViewMetrics'\nimport { trackViewEventCounts } from './trackViewEventCounts'\n\nexport interface ViewEvent {\n  id: string\n  name?: string\n  service?: string\n  version?: string\n  location: Readonly<Location>\n  timings: Timings\n  customTimings: ViewCustomTimings\n  eventCounts: EventCounts\n  documentVersion: number\n  startClocks: ClocksState\n  duration: Duration\n  isActive: boolean\n  loadingTime?: Duration\n  loadingType: ViewLoadingType\n  cumulativeLayoutShift?: number\n}\n\nexport interface ViewCreatedEvent {\n  id: string\n  name?: string\n  service?: string\n  version?: string\n  startClocks: ClocksState\n}\n\nexport interface ViewEndedEvent {\n  endClocks: ClocksState\n}\n\nexport const THROTTLE_VIEW_UPDATE_PERIOD = 3000\nexport const SESSION_KEEP_ALIVE_INTERVAL = 5 * ONE_MINUTE\n\nexport interface ViewOptions {\n  name?: string\n  service?: string\n  version?: string\n}\n\nexport function trackViews(\n  location: Location,\n  lifeCycle: LifeCycle,\n  domMutationObservable: Observable<void>,\n  configuration: RumConfiguration,\n  locationChangeObservable: Observable<LocationChange>,\n  areViewsTrackedAutomatically: boolean,\n  initialViewOptions?: ViewOptions\n) {\n  const { stop: stopInitialViewTracking, initialView } = trackInitialView(initialViewOptions)\n  let currentView = initialView\n\n  const { stop: stopViewLifeCycle } = startViewLifeCycle()\n\n  let locationChangeSubscription: Subscription\n  if (areViewsTrackedAutomatically) {\n    locationChangeSubscription = renewViewOnLocationChange(locationChangeObservable)\n  }\n\n  function trackInitialView(options?: ViewOptions) {\n    const initialView = newView(\n      lifeCycle,\n      domMutationObservable,\n      configuration,\n      location,\n      ViewLoadingType.INITIAL_LOAD,\n      clocksOrigin(),\n      options\n    )\n    const { stop } = trackInitialViewTimings(lifeCycle, (timings) => {\n      initialView.updateTimings(timings)\n      initialView.scheduleUpdate()\n    })\n    return { initialView, stop }\n  }\n\n  function trackViewChange(startClocks?: ClocksState, viewOptions?: ViewOptions) {\n    return newView(\n      lifeCycle,\n      domMutationObservable,\n      configuration,\n      location,\n      ViewLoadingType.ROUTE_CHANGE,\n      startClocks,\n      viewOptions\n    )\n  }\n\n  function startViewLifeCycle() {\n    lifeCycle.subscribe(LifeCycleEventType.SESSION_RENEWED, () => {\n      // do not trigger view update to avoid wrong data\n      currentView.end()\n      // Renew view on session renewal\n      currentView = trackViewChange(undefined, {\n        name: currentView.name,\n        service: currentView.service,\n        version: currentView.version,\n      })\n    })\n\n    // End the current view on page unload\n    lifeCycle.subscribe(LifeCycleEventType.PAGE_EXITED, (pageExitEvent) => {\n      if (pageExitEvent.reason === PageExitReason.UNLOADING) {\n        currentView.end()\n        currentView.triggerUpdate()\n      }\n    })\n\n    // Session keep alive\n    const keepAliveInterval = window.setInterval(\n      monitor(() => {\n        currentView.triggerUpdate()\n      }),\n      SESSION_KEEP_ALIVE_INTERVAL\n    )\n\n    return {\n      stop: () => {\n        clearInterval(keepAliveInterval)\n      },\n    }\n  }\n\n  function renewViewOnLocationChange(locationChangeObservable: Observable<LocationChange>) {\n    return locationChangeObservable.subscribe(({ oldLocation, newLocation }) => {\n      if (areDifferentLocation(oldLocation, newLocation)) {\n        currentView.end()\n        currentView.triggerUpdate()\n        currentView = trackViewChange()\n        return\n      }\n    })\n  }\n\n  return {\n    addTiming: (name: string, time: RelativeTime | TimeStamp = timeStampNow()) => {\n      currentView.addTiming(name, time)\n      currentView.scheduleUpdate()\n    },\n    startView: (options?: ViewOptions, startClocks?: ClocksState) => {\n      currentView.end(startClocks)\n      currentView.triggerUpdate()\n      currentView = trackViewChange(startClocks, options)\n    },\n    stop: () => {\n      locationChangeSubscription?.unsubscribe()\n      stopInitialViewTracking()\n      stopViewLifeCycle()\n      currentView.end()\n    },\n  }\n}\n\nfunction newView(\n  lifeCycle: LifeCycle,\n  domMutationObservable: Observable<void>,\n  configuration: RumConfiguration,\n  initialLocation: Location,\n  loadingType: ViewLoadingType,\n  startClocks: ClocksState = clocksNow(),\n  viewOptions?: ViewOptions\n) {\n  // Setup initial values\n  const id = generateUUID()\n  let timings: Timings = {}\n  const customTimings: ViewCustomTimings = {}\n  let documentVersion = 0\n  let endClocks: ClocksState | undefined\n  const location = shallowClone(initialLocation)\n\n  let name: string | undefined\n  let service: string | undefined\n  let version: string | undefined\n  if (viewOptions) {\n    name = viewOptions.name\n    service = viewOptions.service\n    version = viewOptions.version\n  }\n\n  lifeCycle.notify(LifeCycleEventType.VIEW_CREATED, {\n    id,\n    name,\n    startClocks,\n    service,\n    version,\n  })\n\n  // Update the view every time the measures are changing\n  const { throttled: scheduleViewUpdate, cancel: cancelScheduleViewUpdate } = throttle(\n    monitor(triggerViewUpdate),\n    THROTTLE_VIEW_UPDATE_PERIOD,\n    {\n      leading: false,\n    }\n  )\n\n  const {\n    setLoadEvent,\n    stop: stopViewMetricsTracking,\n    viewMetrics,\n  } = trackViewMetrics(lifeCycle, domMutationObservable, configuration, scheduleViewUpdate, loadingType, startClocks)\n\n  const { scheduleStop: scheduleStopEventCountsTracking, eventCounts } = trackViewEventCounts(\n    lifeCycle,\n    id,\n    scheduleViewUpdate\n  )\n\n  // Initial view update\n  triggerViewUpdate()\n\n  function triggerViewUpdate() {\n    documentVersion += 1\n    const currentEnd = endClocks === undefined ? timeStampNow() : endClocks.timeStamp\n    lifeCycle.notify(\n      LifeCycleEventType.VIEW_UPDATED,\n      assign(\n        {\n          customTimings,\n          documentVersion,\n          id,\n          name,\n          service,\n          version,\n          loadingType,\n          location,\n          startClocks,\n          timings,\n          duration: elapsed(startClocks.timeStamp, currentEnd),\n          isActive: endClocks === undefined,\n          eventCounts,\n        },\n        viewMetrics\n      )\n    )\n  }\n\n  return {\n    name,\n    service,\n    version,\n    scheduleUpdate: scheduleViewUpdate,\n    end(clocks = clocksNow()) {\n      endClocks = clocks\n      lifeCycle.notify(LifeCycleEventType.VIEW_ENDED, { endClocks })\n      stopViewMetricsTracking()\n      scheduleStopEventCountsTracking()\n    },\n    triggerUpdate() {\n      // cancel any pending view updates execution\n      cancelScheduleViewUpdate()\n      triggerViewUpdate()\n    },\n    updateTimings(newTimings: Timings) {\n      timings = newTimings\n      if (newTimings.loadEvent !== undefined) {\n        setLoadEvent(newTimings.loadEvent)\n      }\n    },\n    addTiming(name: string, time: RelativeTime | TimeStamp) {\n      const relativeTime = looksLikeRelativeTime(time) ? time : elapsed(startClocks.timeStamp, time)\n      customTimings[sanitizeTiming(name)] = relativeTime\n    },\n  }\n}\n\n/**\n * Timing name is used as facet path that must contain only letters, digits, or the characters - _ . @ $\n */\nfunction sanitizeTiming(name: string) {\n  const sanitized = name.replace(/[^a-zA-Z0-9-_.@$]/g, '_')\n  if (sanitized !== name) {\n    display.warn(`Invalid timing name: ${name}, sanitized to: ${sanitized}`)\n  }\n  return sanitized\n}\n\nfunction areDifferentLocation(currentLocation: Location, otherLocation: Location) {\n  return (\n    currentLocation.pathname !== otherLocation.pathname ||\n    (!isHashAnAnchor(otherLocation.hash) &&\n      getPathFromHash(otherLocation.hash) !== getPathFromHash(currentLocation.hash))\n  )\n}\n\nfunction isHashAnAnchor(hash: string) {\n  const correspondingId = hash.substr(1)\n  return !!document.getElementById(correspondingId)\n}\n\nfunction getPathFromHash(hash: string) {\n  const index = hash.indexOf('?')\n  return index < 0 ? hash : hash.slice(0, index)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}