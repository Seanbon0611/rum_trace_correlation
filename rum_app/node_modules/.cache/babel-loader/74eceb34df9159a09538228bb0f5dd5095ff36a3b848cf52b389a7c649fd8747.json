{"ast":null,"code":"import { addTelemetryError } from '../domain/telemetry';\nimport { monitor } from '../tools/monitor';\nimport { newRetryState, sendWithRetryStrategy } from './sendWithRetryStrategy';\nexport function createHttpRequest(endpointBuilder, bytesLimit, reportError) {\n  var retryState = newRetryState();\n  var sendStrategyForRetry = function (payload, onResponse) {\n    return fetchKeepAliveStrategy(endpointBuilder, bytesLimit, payload, onResponse);\n  };\n  return {\n    send: function (payload) {\n      sendWithRetryStrategy(payload, retryState, sendStrategyForRetry, endpointBuilder.endpointType, reportError);\n    },\n    /**\n     * Since fetch keepalive behaves like regular fetch on Firefox,\n     * keep using sendBeaconStrategy on exit\n     */\n    sendOnExit: function (payload) {\n      sendBeaconStrategy(endpointBuilder, bytesLimit, payload);\n    }\n  };\n}\nfunction sendBeaconStrategy(endpointBuilder, bytesLimit, _a) {\n  var data = _a.data,\n    bytesCount = _a.bytesCount;\n  var canUseBeacon = !!navigator.sendBeacon && bytesCount < bytesLimit;\n  if (canUseBeacon) {\n    try {\n      var beaconUrl = endpointBuilder.build('beacon');\n      var isQueued = navigator.sendBeacon(beaconUrl, data);\n      if (isQueued) {\n        return;\n      }\n    } catch (e) {\n      reportBeaconError(e);\n    }\n  }\n  var xhrUrl = endpointBuilder.build('xhr');\n  sendXHR(xhrUrl, data);\n}\nvar hasReportedBeaconError = false;\nfunction reportBeaconError(e) {\n  if (!hasReportedBeaconError) {\n    hasReportedBeaconError = true;\n    addTelemetryError(e);\n  }\n}\nexport function fetchKeepAliveStrategy(endpointBuilder, bytesLimit, _a, onResponse) {\n  var data = _a.data,\n    bytesCount = _a.bytesCount,\n    retry = _a.retry;\n  var canUseKeepAlive = isKeepAliveSupported() && bytesCount < bytesLimit;\n  if (canUseKeepAlive) {\n    var fetchUrl = endpointBuilder.build('fetch', retry);\n    fetch(fetchUrl, {\n      method: 'POST',\n      body: data,\n      keepalive: true,\n      mode: 'cors'\n    }).then(monitor(function (response) {\n      return onResponse === null || onResponse === void 0 ? void 0 : onResponse({\n        status: response.status,\n        type: response.type\n      });\n    }), monitor(function () {\n      var xhrUrl = endpointBuilder.build('xhr', retry);\n      // failed to queue the request\n      sendXHR(xhrUrl, data, onResponse);\n    }));\n  } else {\n    var xhrUrl = endpointBuilder.build('xhr', retry);\n    sendXHR(xhrUrl, data, onResponse);\n  }\n}\nfunction isKeepAliveSupported() {\n  // Request can throw, cf https://developer.mozilla.org/en-US/docs/Web/API/Request/Request#errors\n  try {\n    return window.Request && 'keepalive' in new Request('http://a');\n  } catch (_a) {\n    return false;\n  }\n}\nexport function sendXHR(url, data, onResponse) {\n  var request = new XMLHttpRequest();\n  var onLoadEnd = monitor(function () {\n    // prevent multiple onResponse callbacks\n    // if the xhr instance is reused by a third party\n    request.removeEventListener('loadend', onLoadEnd);\n    onResponse === null || onResponse === void 0 ? void 0 : onResponse({\n      status: request.status\n    });\n  });\n  request.open('POST', url, true);\n  request.addEventListener('loadend', onLoadEnd);\n  request.send(data);\n}","map":{"version":3,"names":["addTelemetryError","monitor","newRetryState","sendWithRetryStrategy","createHttpRequest","endpointBuilder","bytesLimit","reportError","retryState","sendStrategyForRetry","payload","onResponse","fetchKeepAliveStrategy","send","endpointType","sendOnExit","sendBeaconStrategy","_a","data","bytesCount","canUseBeacon","navigator","sendBeacon","beaconUrl","build","isQueued","e","reportBeaconError","xhrUrl","sendXHR","hasReportedBeaconError","retry","canUseKeepAlive","isKeepAliveSupported","fetchUrl","fetch","method","body","keepalive","mode","then","response","status","type","window","Request","url","request","XMLHttpRequest","onLoadEnd","removeEventListener","open","addEventListener"],"sources":["/Users/sean.dever/Desktop/PersonalRepos/rum_and_trace_correlation/rum_app/node_modules/@datadog/browser-core/src/transport/httpRequest.ts"],"sourcesContent":["import type { EndpointBuilder } from '../domain/configuration'\nimport { addTelemetryError } from '../domain/telemetry'\nimport type { Context } from '../tools/context'\nimport { monitor } from '../tools/monitor'\nimport type { RawError } from '../tools/error'\nimport { newRetryState, sendWithRetryStrategy } from './sendWithRetryStrategy'\n\n/**\n * Use POST request without content type to:\n * - avoid CORS preflight requests\n * - allow usage of sendBeacon\n *\n * multiple elements are sent separated by \\n in order\n * to be parsed correctly without content type header\n */\n\nexport type HttpRequest = ReturnType<typeof createHttpRequest>\n\nexport interface HttpResponse extends Context {\n  status: number\n  type?: ResponseType\n}\n\nexport interface Payload {\n  data: string | FormData\n  bytesCount: number\n  retry?: RetryInfo\n}\n\nexport interface RetryInfo {\n  count: number\n  lastFailureStatus: number\n}\n\nexport function createHttpRequest(\n  endpointBuilder: EndpointBuilder,\n  bytesLimit: number,\n  reportError: (error: RawError) => void\n) {\n  const retryState = newRetryState()\n  const sendStrategyForRetry = (payload: Payload, onResponse: (r: HttpResponse) => void) =>\n    fetchKeepAliveStrategy(endpointBuilder, bytesLimit, payload, onResponse)\n\n  return {\n    send: (payload: Payload) => {\n      sendWithRetryStrategy(payload, retryState, sendStrategyForRetry, endpointBuilder.endpointType, reportError)\n    },\n    /**\n     * Since fetch keepalive behaves like regular fetch on Firefox,\n     * keep using sendBeaconStrategy on exit\n     */\n    sendOnExit: (payload: Payload) => {\n      sendBeaconStrategy(endpointBuilder, bytesLimit, payload)\n    },\n  }\n}\n\nfunction sendBeaconStrategy(endpointBuilder: EndpointBuilder, bytesLimit: number, { data, bytesCount }: Payload) {\n  const canUseBeacon = !!navigator.sendBeacon && bytesCount < bytesLimit\n  if (canUseBeacon) {\n    try {\n      const beaconUrl = endpointBuilder.build('beacon')\n      const isQueued = navigator.sendBeacon(beaconUrl, data)\n\n      if (isQueued) {\n        return\n      }\n    } catch (e) {\n      reportBeaconError(e)\n    }\n  }\n\n  const xhrUrl = endpointBuilder.build('xhr')\n  sendXHR(xhrUrl, data)\n}\n\nlet hasReportedBeaconError = false\n\nfunction reportBeaconError(e: unknown) {\n  if (!hasReportedBeaconError) {\n    hasReportedBeaconError = true\n    addTelemetryError(e)\n  }\n}\n\nexport function fetchKeepAliveStrategy(\n  endpointBuilder: EndpointBuilder,\n  bytesLimit: number,\n  { data, bytesCount, retry }: Payload,\n  onResponse?: (r: HttpResponse) => void\n) {\n  const canUseKeepAlive = isKeepAliveSupported() && bytesCount < bytesLimit\n  if (canUseKeepAlive) {\n    const fetchUrl = endpointBuilder.build('fetch', retry)\n    fetch(fetchUrl, { method: 'POST', body: data, keepalive: true, mode: 'cors' }).then(\n      monitor((response: Response) => onResponse?.({ status: response.status, type: response.type })),\n      monitor(() => {\n        const xhrUrl = endpointBuilder.build('xhr', retry)\n        // failed to queue the request\n        sendXHR(xhrUrl, data, onResponse)\n      })\n    )\n  } else {\n    const xhrUrl = endpointBuilder.build('xhr', retry)\n    sendXHR(xhrUrl, data, onResponse)\n  }\n}\n\nfunction isKeepAliveSupported() {\n  // Request can throw, cf https://developer.mozilla.org/en-US/docs/Web/API/Request/Request#errors\n  try {\n    return window.Request && 'keepalive' in new Request('http://a')\n  } catch {\n    return false\n  }\n}\n\nexport function sendXHR(url: string, data: Payload['data'], onResponse?: (r: HttpResponse) => void) {\n  const request = new XMLHttpRequest()\n  const onLoadEnd = monitor(() => {\n    // prevent multiple onResponse callbacks\n    // if the xhr instance is reused by a third party\n    request.removeEventListener('loadend', onLoadEnd)\n    onResponse?.({ status: request.status })\n  })\n  request.open('POST', url, true)\n  request.addEventListener('loadend', onLoadEnd)\n  request.send(data)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}