{"ast":null,"code":"import { monitor, ONE_MINUTE } from '@datadog/browser-core';\nimport { trackEventCounts } from '../../trackEventCounts';\n// Some events are not being counted as they transcend views. To reduce the occurrence;\n// an arbitrary delay is added for stopping event counting after the view ends.\n//\n// Ideally, we would not stop and keep counting events until the end of the session.\n// But this might have a small performance impact if there are many many views:\n// we would need to go through each event to see if the related view matches.\n// So let's have a fairly short delay to avoid impacting performances too much.\n//\n// In the future, we could have views stored in a data structure similar to ContextHistory. Whenever\n// a child event is collected, we could look into this history to find the matching view and\n// increase the associated and increase its counter. Having a centralized data structure for it\n// would allow us to look for views more efficiently.\n//\n// For now, having a small cleanup delay will already improve the situation in most cases.\nexport var KEEP_TRACKING_EVENT_COUNTS_AFTER_VIEW_DELAY = 5 * ONE_MINUTE;\nexport function trackViewEventCounts(lifeCycle, viewId, onChange) {\n  var _a = trackEventCounts({\n      lifeCycle: lifeCycle,\n      isChildEvent: function (event) {\n        return event.view.id === viewId;\n      },\n      onChange: onChange\n    }),\n    stop = _a.stop,\n    eventCounts = _a.eventCounts;\n  return {\n    scheduleStop: function () {\n      setTimeout(monitor(stop), KEEP_TRACKING_EVENT_COUNTS_AFTER_VIEW_DELAY);\n    },\n    eventCounts: eventCounts\n  };\n}","map":{"version":3,"names":["monitor","ONE_MINUTE","trackEventCounts","KEEP_TRACKING_EVENT_COUNTS_AFTER_VIEW_DELAY","trackViewEventCounts","lifeCycle","viewId","onChange","_a","isChildEvent","event","view","id","stop","eventCounts","scheduleStop","setTimeout"],"sources":["/Users/sean.dever/Desktop/PersonalRepos/apm-enablement-sessions/rum_and_trace_correlation/rum_app/node_modules/@datadog/browser-rum-core/src/domain/rumEventsCollection/view/trackViewEventCounts.ts"],"sourcesContent":["import { monitor, ONE_MINUTE } from '@datadog/browser-core'\nimport type { LifeCycle } from '../../lifeCycle'\nimport { trackEventCounts } from '../../trackEventCounts'\n\n// Some events are not being counted as they transcend views. To reduce the occurrence;\n// an arbitrary delay is added for stopping event counting after the view ends.\n//\n// Ideally, we would not stop and keep counting events until the end of the session.\n// But this might have a small performance impact if there are many many views:\n// we would need to go through each event to see if the related view matches.\n// So let's have a fairly short delay to avoid impacting performances too much.\n//\n// In the future, we could have views stored in a data structure similar to ContextHistory. Whenever\n// a child event is collected, we could look into this history to find the matching view and\n// increase the associated and increase its counter. Having a centralized data structure for it\n// would allow us to look for views more efficiently.\n//\n// For now, having a small cleanup delay will already improve the situation in most cases.\n\nexport const KEEP_TRACKING_EVENT_COUNTS_AFTER_VIEW_DELAY = 5 * ONE_MINUTE\n\nexport function trackViewEventCounts(lifeCycle: LifeCycle, viewId: string, onChange: () => void) {\n  const { stop, eventCounts } = trackEventCounts({\n    lifeCycle,\n    isChildEvent: (event) => event.view.id === viewId,\n    onChange,\n  })\n\n  return {\n    scheduleStop: () => {\n      setTimeout(monitor(stop), KEEP_TRACKING_EVENT_COUNTS_AFTER_VIEW_DELAY)\n    },\n    eventCounts,\n  }\n}\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,UAAU,QAAQ,uBAAuB;AAE3D,SAASC,gBAAgB,QAAQ,wBAAwB;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,IAAMC,2CAA2C,GAAG,CAAC,GAAGF,UAAU;AAEzE,OAAM,SAAUG,oBAAoBA,CAACC,SAAoB,EAAEC,MAAc,EAAEC,QAAoB;EACvF,IAAAC,EAAA,GAAwBN,gBAAgB,CAAC;MAC7CG,SAAS,EAAAA,SAAA;MACTI,YAAY,EAAE,SAAAA,CAACC,KAAK;QAAK,OAAAA,KAAK,CAACC,IAAI,CAACC,EAAE,KAAKN,MAAM;MAAxB,CAAwB;MACjDC,QAAQ,EAAAA;KACT,CAAC;IAJMM,IAAI,GAAAL,EAAA,CAAAK,IAAA;IAAEC,WAAW,GAAAN,EAAA,CAAAM,WAIvB;EAEF,OAAO;IACLC,YAAY,EAAE,SAAAA,CAAA;MACZC,UAAU,CAAChB,OAAO,CAACa,IAAI,CAAC,EAAEV,2CAA2C,CAAC;IACxE,CAAC;IACDW,WAAW,EAAAA;GACZ;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}