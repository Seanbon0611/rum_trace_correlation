{"ast":null,"code":"import { toStackTraceString } from '../../tools/error';\nimport { monitor } from '../../tools/monitor';\nimport { mergeObservables, Observable } from '../../tools/observable';\nimport { includes, safeTruncate } from '../../tools/utils';\nimport { addEventListener } from '../../browser/addEventListener';\nexport var RawReportType = {\n  intervention: 'intervention',\n  deprecation: 'deprecation',\n  cspViolation: 'csp_violation'\n};\nexport function initReportObservable(apis) {\n  var observables = [];\n  if (includes(apis, RawReportType.cspViolation)) {\n    observables.push(createCspViolationReportObservable());\n  }\n  var reportTypes = apis.filter(function (api) {\n    return api !== RawReportType.cspViolation;\n  });\n  if (reportTypes.length) {\n    observables.push(createReportObservable(reportTypes));\n  }\n  return mergeObservables.apply(void 0, observables);\n}\nfunction createReportObservable(reportTypes) {\n  var observable = new Observable(function () {\n    if (!window.ReportingObserver) {\n      return;\n    }\n    var handleReports = monitor(function (reports) {\n      return reports.forEach(function (report) {\n        observable.notify(buildRawReportFromReport(report));\n      });\n    });\n    var observer = new window.ReportingObserver(handleReports, {\n      types: reportTypes,\n      buffered: true\n    });\n    observer.observe();\n    return function () {\n      observer.disconnect();\n    };\n  });\n  return observable;\n}\nfunction createCspViolationReportObservable() {\n  var observable = new Observable(function () {\n    var handleCspViolation = monitor(function (event) {\n      observable.notify(buildRawReportFromCspViolation(event));\n    });\n    var stop = addEventListener(document, \"securitypolicyviolation\" /* SECURITY_POLICY_VIOLATION */, handleCspViolation).stop;\n    return stop;\n  });\n  return observable;\n}\nfunction buildRawReportFromReport(_a) {\n  var type = _a.type,\n    body = _a.body;\n  return {\n    type: type,\n    subtype: body.id,\n    message: \"\".concat(type, \": \").concat(body.message),\n    stack: buildStack(body.id, body.message, body.sourceFile, body.lineNumber, body.columnNumber)\n  };\n}\nfunction buildRawReportFromCspViolation(event) {\n  var type = RawReportType.cspViolation;\n  var message = \"'\".concat(event.blockedURI, \"' blocked by '\").concat(event.effectiveDirective, \"' directive\");\n  return {\n    type: RawReportType.cspViolation,\n    subtype: event.effectiveDirective,\n    message: \"\".concat(type, \": \").concat(message),\n    stack: buildStack(event.effectiveDirective, event.originalPolicy ? \"\".concat(message, \" of the policy \\\"\").concat(safeTruncate(event.originalPolicy, 100, '...'), \"\\\"\") : 'no policy', event.sourceFile, event.lineNumber, event.columnNumber)\n  };\n}\nfunction buildStack(name, message, sourceFile, lineNumber, columnNumber) {\n  return sourceFile && toStackTraceString({\n    name: name,\n    message: message,\n    stack: [{\n      func: '?',\n      url: sourceFile,\n      line: lineNumber,\n      column: columnNumber\n    }]\n  });\n}","map":{"version":3,"names":["toStackTraceString","monitor","mergeObservables","Observable","includes","safeTruncate","addEventListener","RawReportType","intervention","deprecation","cspViolation","initReportObservable","apis","observables","push","createCspViolationReportObservable","reportTypes","filter","api","length","createReportObservable","apply","observable","window","ReportingObserver","handleReports","reports","forEach","report","notify","buildRawReportFromReport","observer","types","buffered","observe","disconnect","handleCspViolation","event","buildRawReportFromCspViolation","stop","document","_a","type","body","subtype","id","message","concat","stack","buildStack","sourceFile","lineNumber","columnNumber","blockedURI","effectiveDirective","originalPolicy","name","func","url","line","column"],"sources":["/Users/sean.dever/Desktop/PersonalRepos/apm-enablement-sessions/rum_and_trace_correlation/react-app/node_modules/@datadog/browser-core/src/domain/report/reportObservable.ts"],"sourcesContent":["import { toStackTraceString } from '../../tools/error'\nimport { monitor } from '../../tools/monitor'\nimport { mergeObservables, Observable } from '../../tools/observable'\nimport { includes, safeTruncate } from '../../tools/utils'\nimport { addEventListener, DOM_EVENT } from '../../browser/addEventListener'\nimport type { Report, BrowserWindow, ReportType } from './browser.types'\n\nexport const RawReportType = {\n  intervention: 'intervention',\n  deprecation: 'deprecation',\n  cspViolation: 'csp_violation',\n} as const\n\nexport type RawReportType = typeof RawReportType[keyof typeof RawReportType]\n\nexport interface RawReport {\n  type: RawReportType\n  subtype: string\n  message: string\n  stack?: string\n}\n\nexport function initReportObservable(apis: RawReportType[]) {\n  const observables: Array<Observable<RawReport>> = []\n\n  if (includes(apis, RawReportType.cspViolation)) {\n    observables.push(createCspViolationReportObservable())\n  }\n\n  const reportTypes = apis.filter((api: RawReportType): api is ReportType => api !== RawReportType.cspViolation)\n  if (reportTypes.length) {\n    observables.push(createReportObservable(reportTypes))\n  }\n\n  return mergeObservables<RawReport>(...observables)\n}\n\nfunction createReportObservable(reportTypes: ReportType[]) {\n  const observable = new Observable<RawReport>(() => {\n    if (!(window as BrowserWindow).ReportingObserver) {\n      return\n    }\n\n    const handleReports = monitor((reports: Report[]) =>\n      reports.forEach((report) => {\n        observable.notify(buildRawReportFromReport(report))\n      })\n    )\n\n    const observer = new (window as BrowserWindow).ReportingObserver!(handleReports, {\n      types: reportTypes,\n      buffered: true,\n    })\n\n    observer.observe()\n    return () => {\n      observer.disconnect()\n    }\n  })\n\n  return observable\n}\n\nfunction createCspViolationReportObservable() {\n  const observable = new Observable<RawReport>(() => {\n    const handleCspViolation = monitor((event: SecurityPolicyViolationEvent) => {\n      observable.notify(buildRawReportFromCspViolation(event))\n    })\n\n    const { stop } = addEventListener(document, DOM_EVENT.SECURITY_POLICY_VIOLATION, handleCspViolation)\n\n    return stop\n  })\n  return observable\n}\n\nfunction buildRawReportFromReport({ type, body }: Report): RawReport {\n  return {\n    type,\n    subtype: body.id,\n    message: `${type}: ${body.message}`,\n    stack: buildStack(body.id, body.message, body.sourceFile, body.lineNumber, body.columnNumber),\n  }\n}\n\nfunction buildRawReportFromCspViolation(event: SecurityPolicyViolationEvent): RawReport {\n  const type = RawReportType.cspViolation\n  const message = `'${event.blockedURI}' blocked by '${event.effectiveDirective}' directive`\n  return {\n    type: RawReportType.cspViolation,\n    subtype: event.effectiveDirective,\n    message: `${type}: ${message}`,\n    stack: buildStack(\n      event.effectiveDirective,\n      event.originalPolicy\n        ? `${message} of the policy \"${safeTruncate(event.originalPolicy, 100, '...')}\"`\n        : 'no policy',\n      event.sourceFile,\n      event.lineNumber,\n      event.columnNumber\n    ),\n  }\n}\n\nfunction buildStack(\n  name: string,\n  message: string,\n  sourceFile: string | undefined,\n  lineNumber: number | undefined,\n  columnNumber: number | undefined\n): string | undefined {\n  return (\n    sourceFile &&\n    toStackTraceString({\n      name,\n      message,\n      stack: [\n        {\n          func: '?',\n          url: sourceFile,\n          line: lineNumber,\n          column: columnNumber,\n        },\n      ],\n    })\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}