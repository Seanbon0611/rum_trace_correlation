{"ast":null,"code":"import { dateNow, assign, addEventListeners, getRelativeTime, isNumber, monitor, relativeNow, runOnReadyState } from '@datadog/browser-core';\nimport { FAKE_INITIAL_DOCUMENT, isAllowedRequestUrl } from '../domain/rumEventsCollection/resource/resourceUtils';\nimport { getDocumentTraceId } from '../domain/tracing/getDocumentTraceId';\nfunction supportPerformanceObject() {\n  return window.performance !== undefined && 'getEntries' in performance;\n}\nexport function supportPerformanceTimingEvent(entryType) {\n  return window.PerformanceObserver && PerformanceObserver.supportedEntryTypes !== undefined && PerformanceObserver.supportedEntryTypes.includes(entryType);\n}\nexport function startPerformanceCollection(lifeCycle, configuration) {\n  retrieveInitialDocumentResourceTiming(function (timing) {\n    handleRumPerformanceEntries(lifeCycle, configuration, [timing]);\n  });\n  if (supportPerformanceObject()) {\n    var performanceEntries_1 = performance.getEntries();\n    // Because the performance entry list can be quite large\n    // delay the computation to prevent the SDK from blocking the main thread on init\n    setTimeout(monitor(function () {\n      return handleRumPerformanceEntries(lifeCycle, configuration, performanceEntries_1);\n    }));\n  }\n  if (window.PerformanceObserver) {\n    var handlePerformanceEntryList_1 = monitor(function (entries) {\n      return handleRumPerformanceEntries(lifeCycle, configuration, entries.getEntries());\n    });\n    var mainEntries = ['resource', 'navigation', 'longtask', 'paint'];\n    var experimentalEntries = ['largest-contentful-paint', 'first-input', 'layout-shift'];\n    try {\n      // Experimental entries are not retrieved by performance.getEntries()\n      // use a single PerformanceObserver with buffered flag by type\n      // to get values that could happen before SDK init\n      experimentalEntries.forEach(function (type) {\n        var observer = new PerformanceObserver(handlePerformanceEntryList_1);\n        observer.observe({\n          type: type,\n          buffered: true\n        });\n      });\n    } catch (e) {\n      // Some old browser versions (ex: chrome 67) don't support the PerformanceObserver type and buffered options\n      // In these cases, fallback to PerformanceObserver with entryTypes\n      mainEntries.push.apply(mainEntries, experimentalEntries);\n    }\n    var mainObserver = new PerformanceObserver(handlePerformanceEntryList_1);\n    mainObserver.observe({\n      entryTypes: mainEntries\n    });\n    if (supportPerformanceObject() && 'addEventListener' in performance) {\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1559377\n      performance.addEventListener('resourcetimingbufferfull', function () {\n        performance.clearResourceTimings();\n      });\n    }\n  }\n  if (!supportPerformanceTimingEvent('navigation')) {\n    retrieveNavigationTiming(function (timing) {\n      handleRumPerformanceEntries(lifeCycle, configuration, [timing]);\n    });\n  }\n  if (!supportPerformanceTimingEvent('first-input')) {\n    retrieveFirstInputTiming(function (timing) {\n      handleRumPerformanceEntries(lifeCycle, configuration, [timing]);\n    });\n  }\n}\nexport function retrieveInitialDocumentResourceTiming(callback) {\n  runOnReadyState('interactive', function () {\n    var timing;\n    var forcedAttributes = {\n      entryType: 'resource',\n      initiatorType: FAKE_INITIAL_DOCUMENT,\n      traceId: getDocumentTraceId(document)\n    };\n    if (supportPerformanceTimingEvent('navigation') && performance.getEntriesByType('navigation').length > 0) {\n      var navigationEntry = performance.getEntriesByType('navigation')[0];\n      timing = assign(navigationEntry.toJSON(), forcedAttributes);\n    } else {\n      var relativePerformanceTiming = computeRelativePerformanceTiming();\n      timing = assign(relativePerformanceTiming, {\n        decodedBodySize: 0,\n        duration: relativePerformanceTiming.responseEnd,\n        name: window.location.href,\n        startTime: 0\n      }, forcedAttributes);\n    }\n    callback(timing);\n  });\n}\nfunction retrieveNavigationTiming(callback) {\n  function sendFakeTiming() {\n    callback(assign(computeRelativePerformanceTiming(), {\n      entryType: 'navigation'\n    }));\n  }\n  runOnReadyState('complete', function () {\n    // Send it a bit after the actual load event, so the \"loadEventEnd\" timing is accurate\n    setTimeout(monitor(sendFakeTiming));\n  });\n}\n/**\n * first-input timing entry polyfill based on\n * https://github.com/GoogleChrome/web-vitals/blob/master/src/lib/polyfills/firstInputPolyfill.ts\n */\nfunction retrieveFirstInputTiming(callback) {\n  var startTimeStamp = dateNow();\n  var timingSent = false;\n  var removeEventListeners = addEventListeners(window, [\"click\" /* CLICK */, \"mousedown\" /* MOUSE_DOWN */, \"keydown\" /* KEY_DOWN */, \"touchstart\" /* TOUCH_START */, \"pointerdown\" /* POINTER_DOWN */], function (evt) {\n    // Only count cancelable events, which should trigger behavior important to the user.\n    if (!evt.cancelable) {\n      return;\n    }\n    // This timing will be used to compute the \"first Input delay\", which is the delta between\n    // when the system received the event (e.g. evt.timeStamp) and when it could run the callback\n    // (e.g. performance.now()).\n    var timing = {\n      entryType: 'first-input',\n      processingStart: relativeNow(),\n      startTime: evt.timeStamp\n    };\n    if (evt.type === \"pointerdown\" /* POINTER_DOWN */) {\n      sendTimingIfPointerIsNotCancelled(timing);\n    } else {\n      sendTiming(timing);\n    }\n  }, {\n    passive: true,\n    capture: true\n  }).stop;\n  /**\n   * Pointer events are a special case, because they can trigger main or compositor thread behavior.\n   * We differentiate these cases based on whether or not we see a pointercancel event, which are\n   * fired when we scroll. If we're scrolling we don't need to report input delay since FID excludes\n   * scrolling and pinch/zooming.\n   */\n  function sendTimingIfPointerIsNotCancelled(timing) {\n    addEventListeners(window, [\"pointerup\" /* POINTER_UP */, \"pointercancel\" /* POINTER_CANCEL */], function (event) {\n      if (event.type === \"pointerup\" /* POINTER_UP */) {\n        sendTiming(timing);\n      }\n    }, {\n      once: true\n    });\n  }\n  function sendTiming(timing) {\n    if (!timingSent) {\n      timingSent = true;\n      removeEventListeners();\n      // In some cases the recorded delay is clearly wrong, e.g. it's negative or it's larger than\n      // the time between now and when the page was loaded.\n      // - https://github.com/GoogleChromeLabs/first-input-delay/issues/4\n      // - https://github.com/GoogleChromeLabs/first-input-delay/issues/6\n      // - https://github.com/GoogleChromeLabs/first-input-delay/issues/7\n      var delay = timing.processingStart - timing.startTime;\n      if (delay >= 0 && delay < dateNow() - startTimeStamp) {\n        callback(timing);\n      }\n    }\n  }\n}\nfunction computeRelativePerformanceTiming() {\n  var result = {};\n  var timing = performance.timing;\n  for (var key in timing) {\n    if (isNumber(timing[key])) {\n      var numberKey = key;\n      var timingElement = timing[numberKey];\n      result[numberKey] = timingElement === 0 ? 0 : getRelativeTime(timingElement);\n    }\n  }\n  return result;\n}\nfunction handleRumPerformanceEntries(lifeCycle, configuration, entries) {\n  var rumPerformanceEntries = entries.filter(function (entry) {\n    return entry.entryType === 'resource' || entry.entryType === 'navigation' || entry.entryType === 'paint' || entry.entryType === 'longtask' || entry.entryType === 'largest-contentful-paint' || entry.entryType === 'first-input' || entry.entryType === 'layout-shift';\n  });\n  var rumAllowedPerformanceEntries = rumPerformanceEntries.filter(function (entry) {\n    return !isIncompleteNavigation(entry) && !isForbiddenResource(configuration, entry);\n  });\n  if (rumAllowedPerformanceEntries.length) {\n    lifeCycle.notify(0 /* PERFORMANCE_ENTRIES_COLLECTED */, rumAllowedPerformanceEntries);\n  }\n}\nfunction isIncompleteNavigation(entry) {\n  return entry.entryType === 'navigation' && entry.loadEventEnd <= 0;\n}\nfunction isForbiddenResource(configuration, entry) {\n  return entry.entryType === 'resource' && !isAllowedRequestUrl(configuration, entry.name);\n}","map":{"version":3,"names":["dateNow","assign","addEventListeners","getRelativeTime","isNumber","monitor","relativeNow","runOnReadyState","FAKE_INITIAL_DOCUMENT","isAllowedRequestUrl","getDocumentTraceId","supportPerformanceObject","window","performance","undefined","supportPerformanceTimingEvent","entryType","PerformanceObserver","supportedEntryTypes","includes","startPerformanceCollection","lifeCycle","configuration","retrieveInitialDocumentResourceTiming","timing","handleRumPerformanceEntries","performanceEntries_1","getEntries","setTimeout","handlePerformanceEntryList_1","entries","mainEntries","experimentalEntries","forEach","type","observer","observe","buffered","e","push","apply","mainObserver","entryTypes","addEventListener","clearResourceTimings","retrieveNavigationTiming","retrieveFirstInputTiming","callback","forcedAttributes","initiatorType","traceId","document","getEntriesByType","length","navigationEntry","toJSON","relativePerformanceTiming","computeRelativePerformanceTiming","decodedBodySize","duration","responseEnd","name","location","href","startTime","sendFakeTiming","startTimeStamp","timingSent","removeEventListeners","evt","cancelable","processingStart","timeStamp","sendTimingIfPointerIsNotCancelled","sendTiming","passive","capture","stop","event","once","delay","result","key","numberKey","timingElement","rumPerformanceEntries","filter","entry","rumAllowedPerformanceEntries","isIncompleteNavigation","isForbiddenResource","notify","loadEventEnd"],"sources":["/Users/sean.dever/Desktop/PersonalRepos/apm-enablement-sessions/rum_and_trace_correlation/rum_app/node_modules/@datadog/browser-rum-core/src/browser/performanceCollection.ts"],"sourcesContent":["import type { Duration, RelativeTime, TimeStamp } from '@datadog/browser-core'\nimport {\n  dateNow,\n  assign,\n  addEventListeners,\n  DOM_EVENT,\n  getRelativeTime,\n  isNumber,\n  monitor,\n  relativeNow,\n  runOnReadyState,\n} from '@datadog/browser-core'\n\nimport type { RumConfiguration } from '../domain/configuration'\nimport type { LifeCycle } from '../domain/lifeCycle'\nimport { LifeCycleEventType } from '../domain/lifeCycle'\nimport { FAKE_INITIAL_DOCUMENT, isAllowedRequestUrl } from '../domain/rumEventsCollection/resource/resourceUtils'\n\nimport { getDocumentTraceId } from '../domain/tracing/getDocumentTraceId'\nimport type { PerformanceEntryRepresentation } from '../domainContext.types'\n\nexport interface RumPerformanceResourceTiming {\n  entryType: 'resource'\n  initiatorType: string\n  name: string\n  startTime: RelativeTime\n  duration: Duration\n  fetchStart: RelativeTime\n  domainLookupStart: RelativeTime\n  domainLookupEnd: RelativeTime\n  connectStart: RelativeTime\n  secureConnectionStart: RelativeTime\n  connectEnd: RelativeTime\n  requestStart: RelativeTime\n  responseStart: RelativeTime\n  responseEnd: RelativeTime\n  redirectStart: RelativeTime\n  redirectEnd: RelativeTime\n  decodedBodySize: number\n  traceId?: string\n}\n\nexport interface RumPerformanceLongTaskTiming {\n  entryType: 'longtask'\n  startTime: RelativeTime\n  duration: Duration\n  toJSON(): PerformanceEntryRepresentation\n}\n\nexport interface RumPerformancePaintTiming {\n  entryType: 'paint'\n  name: 'first-paint' | 'first-contentful-paint'\n  startTime: RelativeTime\n}\n\nexport interface RumPerformanceNavigationTiming {\n  entryType: 'navigation'\n  domComplete: RelativeTime\n  domContentLoadedEventEnd: RelativeTime\n  domInteractive: RelativeTime\n  loadEventEnd: RelativeTime\n  responseStart: RelativeTime\n}\n\nexport interface RumLargestContentfulPaintTiming {\n  entryType: 'largest-contentful-paint'\n  startTime: RelativeTime\n  size: number\n}\n\nexport interface RumFirstInputTiming {\n  entryType: 'first-input'\n  startTime: RelativeTime\n  processingStart: RelativeTime\n}\n\nexport interface RumLayoutShiftTiming {\n  entryType: 'layout-shift'\n  startTime: RelativeTime\n  value: number\n  hadRecentInput: boolean\n}\n\nexport type RumPerformanceEntry =\n  | RumPerformanceResourceTiming\n  | RumPerformanceLongTaskTiming\n  | RumPerformancePaintTiming\n  | RumPerformanceNavigationTiming\n  | RumLargestContentfulPaintTiming\n  | RumFirstInputTiming\n  | RumLayoutShiftTiming\n\nfunction supportPerformanceObject() {\n  return window.performance !== undefined && 'getEntries' in performance\n}\n\nexport function supportPerformanceTimingEvent(entryType: string) {\n  return (\n    window.PerformanceObserver &&\n    PerformanceObserver.supportedEntryTypes !== undefined &&\n    PerformanceObserver.supportedEntryTypes.includes(entryType)\n  )\n}\n\nexport function startPerformanceCollection(lifeCycle: LifeCycle, configuration: RumConfiguration) {\n  retrieveInitialDocumentResourceTiming((timing) => {\n    handleRumPerformanceEntries(lifeCycle, configuration, [timing])\n  })\n\n  if (supportPerformanceObject()) {\n    const performanceEntries = performance.getEntries()\n    // Because the performance entry list can be quite large\n    // delay the computation to prevent the SDK from blocking the main thread on init\n    setTimeout(monitor(() => handleRumPerformanceEntries(lifeCycle, configuration, performanceEntries)))\n  }\n\n  if (window.PerformanceObserver) {\n    const handlePerformanceEntryList = monitor((entries: PerformanceObserverEntryList) =>\n      handleRumPerformanceEntries(lifeCycle, configuration, entries.getEntries())\n    )\n    const mainEntries = ['resource', 'navigation', 'longtask', 'paint']\n    const experimentalEntries = ['largest-contentful-paint', 'first-input', 'layout-shift']\n\n    try {\n      // Experimental entries are not retrieved by performance.getEntries()\n      // use a single PerformanceObserver with buffered flag by type\n      // to get values that could happen before SDK init\n      experimentalEntries.forEach((type) => {\n        const observer = new PerformanceObserver(handlePerformanceEntryList)\n        observer.observe({ type, buffered: true })\n      })\n    } catch (e) {\n      // Some old browser versions (ex: chrome 67) don't support the PerformanceObserver type and buffered options\n      // In these cases, fallback to PerformanceObserver with entryTypes\n      mainEntries.push(...experimentalEntries)\n    }\n\n    const mainObserver = new PerformanceObserver(handlePerformanceEntryList)\n    mainObserver.observe({ entryTypes: mainEntries })\n\n    if (supportPerformanceObject() && 'addEventListener' in performance) {\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1559377\n      performance.addEventListener('resourcetimingbufferfull', () => {\n        performance.clearResourceTimings()\n      })\n    }\n  }\n  if (!supportPerformanceTimingEvent('navigation')) {\n    retrieveNavigationTiming((timing) => {\n      handleRumPerformanceEntries(lifeCycle, configuration, [timing])\n    })\n  }\n  if (!supportPerformanceTimingEvent('first-input')) {\n    retrieveFirstInputTiming((timing) => {\n      handleRumPerformanceEntries(lifeCycle, configuration, [timing])\n    })\n  }\n}\n\nexport function retrieveInitialDocumentResourceTiming(callback: (timing: RumPerformanceResourceTiming) => void) {\n  runOnReadyState('interactive', () => {\n    let timing: RumPerformanceResourceTiming\n\n    const forcedAttributes = {\n      entryType: 'resource' as const,\n      initiatorType: FAKE_INITIAL_DOCUMENT,\n      traceId: getDocumentTraceId(document),\n    }\n    if (supportPerformanceTimingEvent('navigation') && performance.getEntriesByType('navigation').length > 0) {\n      const navigationEntry = performance.getEntriesByType('navigation')[0]\n      timing = assign(navigationEntry.toJSON(), forcedAttributes)\n    } else {\n      const relativePerformanceTiming = computeRelativePerformanceTiming()\n      timing = assign(\n        relativePerformanceTiming,\n        {\n          decodedBodySize: 0,\n          duration: relativePerformanceTiming.responseEnd,\n          name: window.location.href,\n          startTime: 0 as RelativeTime,\n        },\n        forcedAttributes\n      )\n    }\n    callback(timing)\n  })\n}\n\nfunction retrieveNavigationTiming(callback: (timing: RumPerformanceNavigationTiming) => void) {\n  function sendFakeTiming() {\n    callback(\n      assign(computeRelativePerformanceTiming(), {\n        entryType: 'navigation' as const,\n      })\n    )\n  }\n\n  runOnReadyState('complete', () => {\n    // Send it a bit after the actual load event, so the \"loadEventEnd\" timing is accurate\n    setTimeout(monitor(sendFakeTiming))\n  })\n}\n\n/**\n * first-input timing entry polyfill based on\n * https://github.com/GoogleChrome/web-vitals/blob/master/src/lib/polyfills/firstInputPolyfill.ts\n */\nfunction retrieveFirstInputTiming(callback: (timing: RumFirstInputTiming) => void) {\n  const startTimeStamp = dateNow()\n  let timingSent = false\n\n  const { stop: removeEventListeners } = addEventListeners(\n    window,\n    [DOM_EVENT.CLICK, DOM_EVENT.MOUSE_DOWN, DOM_EVENT.KEY_DOWN, DOM_EVENT.TOUCH_START, DOM_EVENT.POINTER_DOWN],\n    (evt) => {\n      // Only count cancelable events, which should trigger behavior important to the user.\n      if (!evt.cancelable) {\n        return\n      }\n\n      // This timing will be used to compute the \"first Input delay\", which is the delta between\n      // when the system received the event (e.g. evt.timeStamp) and when it could run the callback\n      // (e.g. performance.now()).\n      const timing: RumFirstInputTiming = {\n        entryType: 'first-input',\n        processingStart: relativeNow(),\n        startTime: evt.timeStamp as RelativeTime,\n      }\n\n      if (evt.type === DOM_EVENT.POINTER_DOWN) {\n        sendTimingIfPointerIsNotCancelled(timing)\n      } else {\n        sendTiming(timing)\n      }\n    },\n    { passive: true, capture: true }\n  )\n\n  /**\n   * Pointer events are a special case, because they can trigger main or compositor thread behavior.\n   * We differentiate these cases based on whether or not we see a pointercancel event, which are\n   * fired when we scroll. If we're scrolling we don't need to report input delay since FID excludes\n   * scrolling and pinch/zooming.\n   */\n  function sendTimingIfPointerIsNotCancelled(timing: RumFirstInputTiming) {\n    addEventListeners(\n      window,\n      [DOM_EVENT.POINTER_UP, DOM_EVENT.POINTER_CANCEL],\n      (event) => {\n        if (event.type === DOM_EVENT.POINTER_UP) {\n          sendTiming(timing)\n        }\n      },\n      { once: true }\n    )\n  }\n\n  function sendTiming(timing: RumFirstInputTiming) {\n    if (!timingSent) {\n      timingSent = true\n      removeEventListeners()\n      // In some cases the recorded delay is clearly wrong, e.g. it's negative or it's larger than\n      // the time between now and when the page was loaded.\n      // - https://github.com/GoogleChromeLabs/first-input-delay/issues/4\n      // - https://github.com/GoogleChromeLabs/first-input-delay/issues/6\n      // - https://github.com/GoogleChromeLabs/first-input-delay/issues/7\n      const delay = timing.processingStart - timing.startTime\n      if (delay >= 0 && delay < dateNow() - startTimeStamp) {\n        callback(timing)\n      }\n    }\n  }\n}\n\nexport type RelativePerformanceTiming = {\n  -readonly [key in keyof Omit<PerformanceTiming, 'toJSON'>]: RelativeTime\n}\n\nfunction computeRelativePerformanceTiming() {\n  const result: Partial<RelativePerformanceTiming> = {}\n  const timing = performance.timing\n  for (const key in timing) {\n    if (isNumber(timing[key as keyof PerformanceTiming])) {\n      const numberKey = key as keyof RelativePerformanceTiming\n      const timingElement = timing[numberKey] as TimeStamp\n      result[numberKey] = timingElement === 0 ? (0 as RelativeTime) : getRelativeTime(timingElement)\n    }\n  }\n  return result as RelativePerformanceTiming\n}\n\nfunction handleRumPerformanceEntries(\n  lifeCycle: LifeCycle,\n  configuration: RumConfiguration,\n  entries: Array<PerformanceEntry | RumPerformanceEntry>\n) {\n  const rumPerformanceEntries = entries.filter(\n    (entry) =>\n      entry.entryType === 'resource' ||\n      entry.entryType === 'navigation' ||\n      entry.entryType === 'paint' ||\n      entry.entryType === 'longtask' ||\n      entry.entryType === 'largest-contentful-paint' ||\n      entry.entryType === 'first-input' ||\n      entry.entryType === 'layout-shift'\n  ) as RumPerformanceEntry[]\n\n  const rumAllowedPerformanceEntries = rumPerformanceEntries.filter(\n    (entry) => !isIncompleteNavigation(entry) && !isForbiddenResource(configuration, entry)\n  )\n\n  if (rumAllowedPerformanceEntries.length) {\n    lifeCycle.notify(LifeCycleEventType.PERFORMANCE_ENTRIES_COLLECTED, rumAllowedPerformanceEntries)\n  }\n}\n\nfunction isIncompleteNavigation(entry: RumPerformanceEntry) {\n  return entry.entryType === 'navigation' && entry.loadEventEnd <= 0\n}\n\nfunction isForbiddenResource(configuration: RumConfiguration, entry: RumPerformanceEntry) {\n  return entry.entryType === 'resource' && !isAllowedRequestUrl(configuration, entry.name)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}