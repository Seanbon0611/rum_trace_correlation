{"ast":null,"code":"/**\n * LIMITATION:\n * For NPM setup, this feature flag singleton is shared between RUM and Logs product.\n * This means that an experimental flag set on the RUM product will be set on the Logs product.\n * So keep in mind that in certain configurations, your experimental feature flag may affect other products.\n */\nimport { includes } from '../../tools/utils';\nimport { display } from '../../tools/display';\nvar enabledExperimentalFeatures;\nexport function updateExperimentalFeatures(enabledFeatures) {\n  // Safely handle external data\n  if (!Array.isArray(enabledFeatures)) {\n    return;\n  }\n  if (!enabledExperimentalFeatures) {\n    enabledExperimentalFeatures = new Set(enabledFeatures);\n  }\n  enabledFeatures.filter(function (flag) {\n    return typeof flag === 'string';\n  }).forEach(function (flag) {\n    if (includes(flag, '-')) {\n      display.warn(\"please use snake case for '\".concat(flag, \"'\"));\n    }\n    enabledExperimentalFeatures.add(flag);\n  });\n}\nexport function isExperimentalFeatureEnabled(featureName) {\n  return !!enabledExperimentalFeatures && enabledExperimentalFeatures.has(featureName);\n}\nexport function resetExperimentalFeatures() {\n  enabledExperimentalFeatures = new Set();\n}\nexport function getExperimentalFeatures() {\n  return enabledExperimentalFeatures || new Set();\n}","map":{"version":3,"names":["includes","display","enabledExperimentalFeatures","updateExperimentalFeatures","enabledFeatures","Array","isArray","Set","filter","flag","forEach","warn","concat","add","isExperimentalFeatureEnabled","featureName","has","resetExperimentalFeatures","getExperimentalFeatures"],"sources":["/Users/sean.dever/Desktop/PersonalRepos/apm-enablement-sessions/rum_and_trace_correlation/rum_app/node_modules/@datadog/browser-core/src/domain/configuration/experimentalFeatures.ts"],"sourcesContent":["/**\n * LIMITATION:\n * For NPM setup, this feature flag singleton is shared between RUM and Logs product.\n * This means that an experimental flag set on the RUM product will be set on the Logs product.\n * So keep in mind that in certain configurations, your experimental feature flag may affect other products.\n */\nimport { includes } from '../../tools/utils'\nimport { display } from '../../tools/display'\n\nlet enabledExperimentalFeatures: Set<string> | undefined\n\nexport function updateExperimentalFeatures(enabledFeatures: string[] | undefined): void {\n  // Safely handle external data\n  if (!Array.isArray(enabledFeatures)) {\n    return\n  }\n\n  if (!enabledExperimentalFeatures) {\n    enabledExperimentalFeatures = new Set(enabledFeatures)\n  }\n\n  enabledFeatures\n    .filter((flag) => typeof flag === 'string')\n    .forEach((flag: string) => {\n      if (includes(flag, '-')) {\n        display.warn(`please use snake case for '${flag}'`)\n      }\n      enabledExperimentalFeatures!.add(flag)\n    })\n}\n\nexport function isExperimentalFeatureEnabled(featureName: string): boolean {\n  return !!enabledExperimentalFeatures && enabledExperimentalFeatures.has(featureName)\n}\n\nexport function resetExperimentalFeatures(): void {\n  enabledExperimentalFeatures = new Set()\n}\n\nexport function getExperimentalFeatures(): Set<string> {\n  return enabledExperimentalFeatures || new Set()\n}\n"],"mappings":"AAAA;;;;;;AAMA,SAASA,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,OAAO,QAAQ,qBAAqB;AAE7C,IAAIC,2BAAoD;AAExD,OAAM,SAAUC,0BAA0BA,CAACC,eAAqC;EAC9E;EACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,eAAe,CAAC,EAAE;IACnC;;EAGF,IAAI,CAACF,2BAA2B,EAAE;IAChCA,2BAA2B,GAAG,IAAIK,GAAG,CAACH,eAAe,CAAC;;EAGxDA,eAAe,CACZI,MAAM,CAAC,UAACC,IAAI;IAAK,cAAOA,IAAI,KAAK,QAAQ;EAAxB,CAAwB,CAAC,CAC1CC,OAAO,CAAC,UAACD,IAAY;IACpB,IAAIT,QAAQ,CAACS,IAAI,EAAE,GAAG,CAAC,EAAE;MACvBR,OAAO,CAACU,IAAI,CAAC,8BAAAC,MAAA,CAA8BH,IAAI,MAAG,CAAC;;IAErDP,2BAA4B,CAACW,GAAG,CAACJ,IAAI,CAAC;EACxC,CAAC,CAAC;AACN;AAEA,OAAM,SAAUK,4BAA4BA,CAACC,WAAmB;EAC9D,OAAO,CAAC,CAACb,2BAA2B,IAAIA,2BAA2B,CAACc,GAAG,CAACD,WAAW,CAAC;AACtF;AAEA,OAAM,SAAUE,yBAAyBA,CAAA;EACvCf,2BAA2B,GAAG,IAAIK,GAAG,EAAE;AACzC;AAEA,OAAM,SAAUW,uBAAuBA,CAAA;EACrC,OAAOhB,2BAA2B,IAAI,IAAIK,GAAG,EAAE;AACjD"},"metadata":{},"sourceType":"module","externalDependencies":[]}