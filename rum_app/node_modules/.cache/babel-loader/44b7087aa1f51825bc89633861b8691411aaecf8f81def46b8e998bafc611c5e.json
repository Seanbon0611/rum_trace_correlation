{"ast":null,"code":"import { instrumentMethod } from '../tools/instrumentMethod';\nimport { callMonitored, monitor } from '../tools/monitor';\nimport { Observable } from '../tools/observable';\nimport { clocksNow } from '../tools/timeUtils';\nimport { normalizeUrl } from '../tools/urlPolyfill';\nvar fetchObservable;\nexport function initFetchObservable() {\n  if (!fetchObservable) {\n    fetchObservable = createFetchObservable();\n  }\n  return fetchObservable;\n}\nfunction createFetchObservable() {\n  var observable = new Observable(function () {\n    if (!window.fetch) {\n      return;\n    }\n    var stop = instrumentMethod(window, 'fetch', function (originalFetch) {\n      return function (input, init) {\n        var responsePromise;\n        var context = callMonitored(beforeSend, null, [observable, input, init]);\n        if (context) {\n          responsePromise = originalFetch.call(this, context.input, context.init);\n          callMonitored(afterSend, null, [observable, responsePromise, context]);\n        } else {\n          responsePromise = originalFetch.call(this, input, init);\n        }\n        return responsePromise;\n      };\n    }).stop;\n    return stop;\n  });\n  return observable;\n}\nfunction beforeSend(observable, input, init) {\n  var method = init && init.method || typeof input === 'object' && input.method || 'GET';\n  var url = normalizeUrl(typeof input === 'object' && input.url || input);\n  var startClocks = clocksNow();\n  var context = {\n    state: 'start',\n    init: init,\n    input: input,\n    method: method,\n    startClocks: startClocks,\n    url: url\n  };\n  observable.notify(context);\n  return context;\n}\nfunction afterSend(observable, responsePromise, startContext) {\n  var reportFetch = function (response) {\n    var context = startContext;\n    context.state = 'resolve';\n    if ('stack' in response || response instanceof Error) {\n      context.status = 0;\n      context.isAborted = response instanceof DOMException && response.code === DOMException.ABORT_ERR;\n      context.error = response;\n    } else if ('status' in response) {\n      context.response = response;\n      context.responseType = response.type;\n      context.status = response.status;\n      context.isAborted = false;\n    }\n    observable.notify(context);\n  };\n  responsePromise.then(monitor(reportFetch), monitor(reportFetch));\n}","map":{"version":3,"names":["instrumentMethod","callMonitored","monitor","Observable","clocksNow","normalizeUrl","fetchObservable","initFetchObservable","createFetchObservable","observable","window","fetch","stop","originalFetch","input","init","responsePromise","context","beforeSend","call","afterSend","method","url","startClocks","state","notify","startContext","reportFetch","response","Error","status","isAborted","DOMException","code","ABORT_ERR","error","responseType","type","then"],"sources":["/Users/sean.dever/Desktop/PersonalRepos/react-app/node_modules/@datadog/browser-core/src/browser/fetchObservable.ts"],"sourcesContent":["import { instrumentMethod } from '../tools/instrumentMethod'\nimport { callMonitored, monitor } from '../tools/monitor'\nimport { Observable } from '../tools/observable'\nimport type { ClocksState } from '../tools/timeUtils'\nimport { clocksNow } from '../tools/timeUtils'\nimport { normalizeUrl } from '../tools/urlPolyfill'\n\ninterface FetchContextBase {\n  method: string\n  startClocks: ClocksState\n  input: RequestInfo\n  init?: RequestInit\n  url: string\n}\n\nexport interface FetchStartContext extends FetchContextBase {\n  state: 'start'\n}\n\nexport interface FetchResolveContext extends FetchContextBase {\n  state: 'resolve'\n  status: number\n  response?: Response\n  responseType?: string\n  isAborted: boolean\n  error?: Error\n}\n\nexport type FetchContext = FetchStartContext | FetchResolveContext\n\nlet fetchObservable: Observable<FetchContext> | undefined\n\nexport function initFetchObservable() {\n  if (!fetchObservable) {\n    fetchObservable = createFetchObservable()\n  }\n  return fetchObservable\n}\n\nfunction createFetchObservable() {\n  const observable = new Observable<FetchContext>(() => {\n    if (!window.fetch) {\n      return\n    }\n\n    const { stop } = instrumentMethod(\n      window,\n      'fetch',\n      (originalFetch) =>\n        function (input, init) {\n          let responsePromise: Promise<Response>\n\n          const context = callMonitored(beforeSend, null, [observable, input, init])\n          if (context) {\n            responsePromise = originalFetch.call(this, context.input, context.init)\n            callMonitored(afterSend, null, [observable, responsePromise, context])\n          } else {\n            responsePromise = originalFetch.call(this, input, init)\n          }\n\n          return responsePromise\n        }\n    )\n\n    return stop\n  })\n\n  return observable\n}\n\nfunction beforeSend(observable: Observable<FetchContext>, input: RequestInfo, init?: RequestInit) {\n  const method = (init && init.method) || (typeof input === 'object' && input.method) || 'GET'\n  const url = normalizeUrl((typeof input === 'object' && input.url) || (input as string))\n  const startClocks = clocksNow()\n\n  const context: FetchStartContext = {\n    state: 'start',\n    init,\n    input,\n    method,\n    startClocks,\n    url,\n  }\n\n  observable.notify(context)\n\n  return context\n}\n\nfunction afterSend(\n  observable: Observable<FetchContext>,\n  responsePromise: Promise<Response>,\n  startContext: FetchStartContext\n) {\n  const reportFetch = (response: Response | Error) => {\n    const context = startContext as unknown as FetchResolveContext\n    context.state = 'resolve'\n    if ('stack' in response || response instanceof Error) {\n      context.status = 0\n      context.isAborted = response instanceof DOMException && response.code === DOMException.ABORT_ERR\n      context.error = response\n    } else if ('status' in response) {\n      context.response = response\n      context.responseType = response.type\n      context.status = response.status\n      context.isAborted = false\n    }\n    observable.notify(context)\n  }\n\n  responsePromise.then(monitor(reportFetch), monitor(reportFetch))\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}