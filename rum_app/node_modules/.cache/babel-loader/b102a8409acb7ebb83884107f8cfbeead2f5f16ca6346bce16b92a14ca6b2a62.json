{"ast":null,"code":"import { toServerDuration, relativeToClocks, generateUUID } from '@datadog/browser-core';\nexport function startLongTaskCollection(lifeCycle, sessionManager) {\n  lifeCycle.subscribe(0 /* PERFORMANCE_ENTRIES_COLLECTED */, function (entries) {\n    for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n      var entry = entries_1[_i];\n      if (entry.entryType !== 'longtask') {\n        break;\n      }\n      var session = sessionManager.findTrackedSession(entry.startTime);\n      if (!session || !session.longTaskAllowed) {\n        break;\n      }\n      var startClocks = relativeToClocks(entry.startTime);\n      var rawRumEvent = {\n        date: startClocks.timeStamp,\n        long_task: {\n          id: generateUUID(),\n          duration: toServerDuration(entry.duration)\n        },\n        type: \"long_task\" /* LONG_TASK */,\n        _dd: {\n          discarded: false\n        }\n      };\n      lifeCycle.notify(10 /* RAW_RUM_EVENT_COLLECTED */, {\n        rawRumEvent: rawRumEvent,\n        startTime: startClocks.relative,\n        domainContext: {\n          performanceEntry: entry.toJSON()\n        }\n      });\n    }\n  });\n}","map":{"version":3,"names":["toServerDuration","relativeToClocks","generateUUID","startLongTaskCollection","lifeCycle","sessionManager","subscribe","entries","_i","entries_1","length","entry","entryType","session","findTrackedSession","startTime","longTaskAllowed","startClocks","rawRumEvent","date","timeStamp","long_task","id","duration","type","_dd","discarded","notify","relative","domainContext","performanceEntry","toJSON"],"sources":["/Users/sean.dever/Desktop/PersonalRepos/apm-enablement-sessions/rum_and_trace_correlation/react-app/node_modules/@datadog/browser-rum-core/src/domain/rumEventsCollection/longTask/longTaskCollection.ts"],"sourcesContent":["import { toServerDuration, relativeToClocks, generateUUID } from '@datadog/browser-core'\nimport type { RawRumLongTaskEvent } from '../../../rawRumEvent.types'\nimport { RumEventType } from '../../../rawRumEvent.types'\nimport type { LifeCycle } from '../../lifeCycle'\nimport { LifeCycleEventType } from '../../lifeCycle'\nimport type { RumSessionManager } from '../../rumSessionManager'\n\nexport function startLongTaskCollection(lifeCycle: LifeCycle, sessionManager: RumSessionManager) {\n  lifeCycle.subscribe(LifeCycleEventType.PERFORMANCE_ENTRIES_COLLECTED, (entries) => {\n    for (const entry of entries) {\n      if (entry.entryType !== 'longtask') {\n        break\n      }\n      const session = sessionManager.findTrackedSession(entry.startTime)\n      if (!session || !session.longTaskAllowed) {\n        break\n      }\n      const startClocks = relativeToClocks(entry.startTime)\n      const rawRumEvent: RawRumLongTaskEvent = {\n        date: startClocks.timeStamp,\n        long_task: {\n          id: generateUUID(),\n          duration: toServerDuration(entry.duration),\n        },\n        type: RumEventType.LONG_TASK,\n        _dd: {\n          discarded: false,\n        },\n      }\n      lifeCycle.notify(LifeCycleEventType.RAW_RUM_EVENT_COLLECTED, {\n        rawRumEvent,\n        startTime: startClocks.relative,\n        domainContext: { performanceEntry: entry.toJSON() },\n      })\n    }\n  })\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,gBAAgB,EAAEC,YAAY,QAAQ,uBAAuB;AAOxF,OAAM,SAAUC,uBAAuBA,CAACC,SAAoB,EAAEC,cAAiC;EAC7FD,SAAS,CAACE,SAAS,wCAAmD,UAACC,OAAO;IAC5E,KAAoB,IAAAC,EAAA,IAAO,EAAPC,SAAA,GAAAF,OAAO,EAAPC,EAAA,GAAAC,SAAA,CAAAC,MAAO,EAAPF,EAAA,EAAO,EAAE;MAAxB,IAAMG,KAAK,GAAAF,SAAA,CAAAD,EAAA;MACd,IAAIG,KAAK,CAACC,SAAS,KAAK,UAAU,EAAE;QAClC;;MAEF,IAAMC,OAAO,GAAGR,cAAc,CAACS,kBAAkB,CAACH,KAAK,CAACI,SAAS,CAAC;MAClE,IAAI,CAACF,OAAO,IAAI,CAACA,OAAO,CAACG,eAAe,EAAE;QACxC;;MAEF,IAAMC,WAAW,GAAGhB,gBAAgB,CAACU,KAAK,CAACI,SAAS,CAAC;MACrD,IAAMG,WAAW,GAAwB;QACvCC,IAAI,EAAEF,WAAW,CAACG,SAAS;QAC3BC,SAAS,EAAE;UACTC,EAAE,EAAEpB,YAAY,EAAE;UAClBqB,QAAQ,EAAEvB,gBAAgB,CAACW,KAAK,CAACY,QAAQ;SAC1C;QACDC,IAAI;QACJC,GAAG,EAAE;UACHC,SAAS,EAAE;;OAEd;MACDtB,SAAS,CAACuB,MAAM,mCAA6C;QAC3DT,WAAW,EAAAA,WAAA;QACXH,SAAS,EAAEE,WAAW,CAACW,QAAQ;QAC/BC,aAAa,EAAE;UAAEC,gBAAgB,EAAEnB,KAAK,CAACoB,MAAM;QAAE;OAClD,CAAC;;EAEN,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}