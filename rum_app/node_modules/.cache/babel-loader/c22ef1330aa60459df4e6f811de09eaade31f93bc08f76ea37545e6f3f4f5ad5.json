{"ast":null,"code":"import { timeStampNow } from '@datadog/browser-core';\nimport { getViewportDimension } from '@datadog/browser-rum-core';\nimport { RecordType, IncrementalSource } from '../../types';\nimport { serializeDocument } from './serialize';\nimport { initObservers } from './observers';\nimport { getVisualViewport, getScrollX, getScrollY } from './viewports';\nimport { assembleIncrementalSnapshot } from './utils';\nimport { createElementsScrollPositions } from './elementsScrollPositions';\nimport { initShadowRootsController } from './shadowRootsController';\nexport function record(options) {\n  var emit = options.emit;\n  // runtime checks for user options\n  if (!emit) {\n    throw new Error('emit function is required');\n  }\n  var elementsScrollPositions = createElementsScrollPositions();\n  var mutationCb = function (mutation) {\n    emit(assembleIncrementalSnapshot(IncrementalSource.Mutation, mutation));\n  };\n  var inputCb = function (s) {\n    return emit(assembleIncrementalSnapshot(IncrementalSource.Input, s));\n  };\n  var shadowRootsController = initShadowRootsController(options.configuration, {\n    mutationCb: mutationCb,\n    inputCb: inputCb\n  });\n  var takeFullSnapshot = function (timestamp, serializationContext) {\n    if (timestamp === void 0) {\n      timestamp = timeStampNow();\n    }\n    if (serializationContext === void 0) {\n      serializationContext = {\n        status: 0 /* INITIAL_FULL_SNAPSHOT */,\n        elementsScrollPositions: elementsScrollPositions,\n        shadowRootsController: shadowRootsController\n      };\n    }\n    var _a = getViewportDimension(),\n      width = _a.width,\n      height = _a.height;\n    emit({\n      data: {\n        height: height,\n        href: window.location.href,\n        width: width\n      },\n      type: RecordType.Meta,\n      timestamp: timestamp\n    });\n    emit({\n      data: {\n        has_focus: document.hasFocus()\n      },\n      type: RecordType.Focus,\n      timestamp: timestamp\n    });\n    emit({\n      data: {\n        node: serializeDocument(document, options.configuration, serializationContext),\n        initialOffset: {\n          left: getScrollX(),\n          top: getScrollY()\n        }\n      },\n      type: RecordType.FullSnapshot,\n      timestamp: timestamp\n    });\n    if (window.visualViewport) {\n      emit({\n        data: getVisualViewport(),\n        type: RecordType.VisualViewport,\n        timestamp: timestamp\n      });\n    }\n  };\n  takeFullSnapshot();\n  var _a = initObservers({\n      lifeCycle: options.lifeCycle,\n      configuration: options.configuration,\n      elementsScrollPositions: elementsScrollPositions,\n      inputCb: inputCb,\n      mediaInteractionCb: function (p) {\n        return emit(assembleIncrementalSnapshot(IncrementalSource.MediaInteraction, p));\n      },\n      mouseInteractionCb: function (mouseInteractionRecord) {\n        return emit(mouseInteractionRecord);\n      },\n      mousemoveCb: function (positions, source) {\n        return emit(assembleIncrementalSnapshot(source, {\n          positions: positions\n        }));\n      },\n      mutationCb: mutationCb,\n      scrollCb: function (p) {\n        return emit(assembleIncrementalSnapshot(IncrementalSource.Scroll, p));\n      },\n      styleSheetCb: function (r) {\n        return emit(assembleIncrementalSnapshot(IncrementalSource.StyleSheetRule, r));\n      },\n      viewportResizeCb: function (d) {\n        return emit(assembleIncrementalSnapshot(IncrementalSource.ViewportResize, d));\n      },\n      frustrationCb: function (frustrationRecord) {\n        return emit(frustrationRecord);\n      },\n      focusCb: function (data) {\n        return emit({\n          data: data,\n          type: RecordType.Focus,\n          timestamp: timeStampNow()\n        });\n      },\n      visualViewportResizeCb: function (data) {\n        emit({\n          data: data,\n          type: RecordType.VisualViewport,\n          timestamp: timeStampNow()\n        });\n      },\n      shadowRootsController: shadowRootsController\n    }),\n    stopObservers = _a.stop,\n    flushMutationsFromObservers = _a.flush;\n  function flushMutations() {\n    shadowRootsController.flush();\n    flushMutationsFromObservers();\n  }\n  return {\n    stop: function () {\n      shadowRootsController.stop();\n      stopObservers();\n    },\n    takeSubsequentFullSnapshot: function (timestamp) {\n      flushMutations();\n      takeFullSnapshot(timestamp, {\n        shadowRootsController: shadowRootsController,\n        status: 1 /* SUBSEQUENT_FULL_SNAPSHOT */,\n        elementsScrollPositions: elementsScrollPositions\n      });\n    },\n    flushMutations: flushMutations,\n    shadowRootsController: shadowRootsController\n  };\n}","map":{"version":3,"names":["timeStampNow","getViewportDimension","RecordType","IncrementalSource","serializeDocument","initObservers","getVisualViewport","getScrollX","getScrollY","assembleIncrementalSnapshot","createElementsScrollPositions","initShadowRootsController","record","options","emit","Error","elementsScrollPositions","mutationCb","mutation","Mutation","inputCb","s","Input","shadowRootsController","configuration","takeFullSnapshot","timestamp","serializationContext","status","_a","width","height","data","href","window","location","type","Meta","has_focus","document","hasFocus","Focus","node","initialOffset","left","top","FullSnapshot","visualViewport","VisualViewport","lifeCycle","mediaInteractionCb","p","MediaInteraction","mouseInteractionCb","mouseInteractionRecord","mousemoveCb","positions","source","scrollCb","Scroll","styleSheetCb","r","StyleSheetRule","viewportResizeCb","d","ViewportResize","frustrationCb","frustrationRecord","focusCb","visualViewportResizeCb","stopObservers","stop","flushMutationsFromObservers","flush","flushMutations","takeSubsequentFullSnapshot"],"sources":["/Users/sean.dever/Desktop/PersonalRepos/apm-enablement-sessions/rum_and_trace_correlation/react-app/node_modules/@datadog/browser-rum/src/domain/record/record.ts"],"sourcesContent":["import type { TimeStamp } from '@datadog/browser-core'\nimport { timeStampNow } from '@datadog/browser-core'\nimport type { LifeCycle, RumConfiguration } from '@datadog/browser-rum-core'\nimport { getViewportDimension } from '@datadog/browser-rum-core'\nimport type {\n  BrowserMutationData,\n  BrowserMutationPayload,\n  BrowserRecord,\n  InputData,\n  MediaInteractionData,\n  MousemoveData,\n  ScrollData,\n  StyleSheetRuleData,\n  ViewportResizeData,\n} from '../../types'\nimport { RecordType, IncrementalSource } from '../../types'\nimport { serializeDocument, SerializationContextStatus } from './serialize'\nimport { initObservers } from './observers'\nimport type { InputCallback } from './observers'\n\nimport { getVisualViewport, getScrollX, getScrollY } from './viewports'\nimport { assembleIncrementalSnapshot } from './utils'\nimport { createElementsScrollPositions } from './elementsScrollPositions'\nimport type { ShadowRootsController } from './shadowRootsController'\nimport { initShadowRootsController } from './shadowRootsController'\n\nexport interface RecordOptions {\n  emit?: (record: BrowserRecord) => void\n  configuration: RumConfiguration\n  lifeCycle: LifeCycle\n}\n\nexport interface RecordAPI {\n  stop: () => void\n  takeSubsequentFullSnapshot: (timestamp?: TimeStamp) => void\n  flushMutations: () => void\n  shadowRootsController: ShadowRootsController\n}\n\nexport function record(options: RecordOptions): RecordAPI {\n  const { emit } = options\n  // runtime checks for user options\n  if (!emit) {\n    throw new Error('emit function is required')\n  }\n\n  const elementsScrollPositions = createElementsScrollPositions()\n\n  const mutationCb = (mutation: BrowserMutationPayload) => {\n    emit(assembleIncrementalSnapshot<BrowserMutationData>(IncrementalSource.Mutation, mutation))\n  }\n  const inputCb: InputCallback = (s) => emit(assembleIncrementalSnapshot<InputData>(IncrementalSource.Input, s))\n\n  const shadowRootsController = initShadowRootsController(options.configuration, { mutationCb, inputCb })\n\n  const takeFullSnapshot = (\n    timestamp = timeStampNow(),\n    serializationContext = {\n      status: SerializationContextStatus.INITIAL_FULL_SNAPSHOT,\n      elementsScrollPositions,\n      shadowRootsController,\n    }\n  ) => {\n    const { width, height } = getViewportDimension()\n    emit({\n      data: {\n        height,\n        href: window.location.href,\n        width,\n      },\n      type: RecordType.Meta,\n      timestamp,\n    })\n\n    emit({\n      data: {\n        has_focus: document.hasFocus(),\n      },\n      type: RecordType.Focus,\n      timestamp,\n    })\n\n    emit({\n      data: {\n        node: serializeDocument(document, options.configuration, serializationContext),\n        initialOffset: {\n          left: getScrollX(),\n          top: getScrollY(),\n        },\n      },\n      type: RecordType.FullSnapshot,\n      timestamp,\n    })\n\n    if (window.visualViewport) {\n      emit({\n        data: getVisualViewport(),\n        type: RecordType.VisualViewport,\n        timestamp,\n      })\n    }\n  }\n\n  takeFullSnapshot()\n\n  const { stop: stopObservers, flush: flushMutationsFromObservers } = initObservers({\n    lifeCycle: options.lifeCycle,\n    configuration: options.configuration,\n    elementsScrollPositions,\n    inputCb,\n    mediaInteractionCb: (p) =>\n      emit(assembleIncrementalSnapshot<MediaInteractionData>(IncrementalSource.MediaInteraction, p)),\n    mouseInteractionCb: (mouseInteractionRecord) => emit(mouseInteractionRecord),\n    mousemoveCb: (positions, source) => emit(assembleIncrementalSnapshot<MousemoveData>(source, { positions })),\n    mutationCb,\n    scrollCb: (p) => emit(assembleIncrementalSnapshot<ScrollData>(IncrementalSource.Scroll, p)),\n    styleSheetCb: (r) => emit(assembleIncrementalSnapshot<StyleSheetRuleData>(IncrementalSource.StyleSheetRule, r)),\n    viewportResizeCb: (d) => emit(assembleIncrementalSnapshot<ViewportResizeData>(IncrementalSource.ViewportResize, d)),\n\n    frustrationCb: (frustrationRecord) => emit(frustrationRecord),\n    focusCb: (data) =>\n      emit({\n        data,\n        type: RecordType.Focus,\n        timestamp: timeStampNow(),\n      }),\n    visualViewportResizeCb: (data) => {\n      emit({\n        data,\n        type: RecordType.VisualViewport,\n        timestamp: timeStampNow(),\n      })\n    },\n    shadowRootsController,\n  })\n\n  function flushMutations() {\n    shadowRootsController.flush()\n    flushMutationsFromObservers()\n  }\n\n  return {\n    stop: () => {\n      shadowRootsController.stop()\n      stopObservers()\n    },\n    takeSubsequentFullSnapshot: (timestamp) => {\n      flushMutations()\n      takeFullSnapshot(timestamp, {\n        shadowRootsController,\n        status: SerializationContextStatus.SUBSEQUENT_FULL_SNAPSHOT,\n        elementsScrollPositions,\n      })\n    },\n    flushMutations,\n    shadowRootsController,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}