{"ast":null,"code":"import { addEventListener } from '@datadog/browser-core';\nexport function listenActionEvents(_a) {\n  var onPointerDown = _a.onPointerDown,\n    onPointerUp = _a.onPointerUp;\n  var selectionEmptyAtPointerDown;\n  var userActivity = {\n    selection: false,\n    input: false\n  };\n  var clickContext;\n  var listeners = [addEventListener(window, \"pointerdown\" /* POINTER_DOWN */, function (event) {\n    if (isValidPointerEvent(event)) {\n      selectionEmptyAtPointerDown = isSelectionEmpty();\n      userActivity = {\n        selection: false,\n        input: false\n      };\n      clickContext = onPointerDown(event);\n    }\n  }, {\n    capture: true\n  }), addEventListener(window, \"selectionchange\" /* SELECTION_CHANGE */, function () {\n    if (!selectionEmptyAtPointerDown || !isSelectionEmpty()) {\n      userActivity.selection = true;\n    }\n  }, {\n    capture: true\n  }), addEventListener(window, \"pointerup\" /* POINTER_UP */, function (event) {\n    if (isValidPointerEvent(event) && clickContext) {\n      // Use a scoped variable to make sure the value is not changed by other clicks\n      var localUserActivity_1 = userActivity;\n      onPointerUp(clickContext, event, function () {\n        return localUserActivity_1;\n      });\n      clickContext = undefined;\n    }\n  }, {\n    capture: true\n  }), addEventListener(window, \"input\" /* INPUT */, function () {\n    userActivity.input = true;\n  }, {\n    capture: true\n  })];\n  return {\n    stop: function () {\n      listeners.forEach(function (listener) {\n        return listener.stop();\n      });\n    }\n  };\n}\nfunction isSelectionEmpty() {\n  var selection = window.getSelection();\n  return !selection || selection.isCollapsed;\n}\nfunction isValidPointerEvent(event) {\n  return event.target instanceof Element &&\n  // Only consider 'primary' pointer events for now. Multi-touch support could be implemented in\n  // the future.\n  event.isPrimary !== false;\n}","map":{"version":3,"names":["addEventListener","listenActionEvents","_a","onPointerDown","onPointerUp","selectionEmptyAtPointerDown","userActivity","selection","input","clickContext","listeners","window","event","isValidPointerEvent","isSelectionEmpty","capture","localUserActivity_1","undefined","stop","forEach","listener","getSelection","isCollapsed","target","Element","isPrimary"],"sources":["/Users/sean.dever/Desktop/PersonalRepos/apm-enablement-sessions/rum_and_trace_correlation/react-app/node_modules/@datadog/browser-rum-core/src/domain/rumEventsCollection/action/listenActionEvents.ts"],"sourcesContent":["import { addEventListener, DOM_EVENT } from '@datadog/browser-core'\n\nexport type MouseEventOnElement = PointerEvent & { target: Element }\n\nexport interface UserActivity {\n  selection: boolean\n  input: boolean\n}\nexport interface ActionEventsHooks<ClickContext> {\n  onPointerDown: (event: MouseEventOnElement) => ClickContext | undefined\n  onPointerUp: (context: ClickContext, event: MouseEventOnElement, getUserActivity: () => UserActivity) => void\n}\n\nexport function listenActionEvents<ClickContext>({ onPointerDown, onPointerUp }: ActionEventsHooks<ClickContext>) {\n  let selectionEmptyAtPointerDown: boolean\n  let userActivity: UserActivity = {\n    selection: false,\n    input: false,\n  }\n  let clickContext: ClickContext | undefined\n\n  const listeners = [\n    addEventListener(\n      window,\n      DOM_EVENT.POINTER_DOWN,\n      (event: PointerEvent) => {\n        if (isValidPointerEvent(event)) {\n          selectionEmptyAtPointerDown = isSelectionEmpty()\n          userActivity = {\n            selection: false,\n            input: false,\n          }\n          clickContext = onPointerDown(event)\n        }\n      },\n      { capture: true }\n    ),\n\n    addEventListener(\n      window,\n      DOM_EVENT.SELECTION_CHANGE,\n      () => {\n        if (!selectionEmptyAtPointerDown || !isSelectionEmpty()) {\n          userActivity.selection = true\n        }\n      },\n      { capture: true }\n    ),\n\n    addEventListener(\n      window,\n      DOM_EVENT.POINTER_UP,\n      (event: PointerEvent) => {\n        if (isValidPointerEvent(event) && clickContext) {\n          // Use a scoped variable to make sure the value is not changed by other clicks\n          const localUserActivity = userActivity\n          onPointerUp(clickContext, event, () => localUserActivity)\n          clickContext = undefined\n        }\n      },\n      { capture: true }\n    ),\n\n    addEventListener(\n      window,\n      DOM_EVENT.INPUT,\n      () => {\n        userActivity.input = true\n      },\n      { capture: true }\n    ),\n  ]\n\n  return {\n    stop: () => {\n      listeners.forEach((listener) => listener.stop())\n    },\n  }\n}\n\nfunction isSelectionEmpty(): boolean {\n  const selection = window.getSelection()\n  return !selection || selection.isCollapsed\n}\n\nfunction isValidPointerEvent(event: PointerEvent): event is MouseEventOnElement {\n  return (\n    event.target instanceof Element &&\n    // Only consider 'primary' pointer events for now. Multi-touch support could be implemented in\n    // the future.\n    event.isPrimary !== false\n  )\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAmB,uBAAuB;AAanE,OAAM,SAAUC,kBAAkBA,CAAeC,EAA+D;MAA7DC,aAAa,GAAAD,EAAA,CAAAC,aAAA;IAAEC,WAAW,GAAAF,EAAA,CAAAE,WAAA;EAC3E,IAAIC,2BAAoC;EACxC,IAAIC,YAAY,GAAiB;IAC/BC,SAAS,EAAE,KAAK;IAChBC,KAAK,EAAE;GACR;EACD,IAAIC,YAAsC;EAE1C,IAAMC,SAAS,GAAG,CAChBV,gBAAgB,CACdW,MAAM,oCAEN,UAACC,KAAmB;IAClB,IAAIC,mBAAmB,CAACD,KAAK,CAAC,EAAE;MAC9BP,2BAA2B,GAAGS,gBAAgB,EAAE;MAChDR,YAAY,GAAG;QACbC,SAAS,EAAE,KAAK;QAChBC,KAAK,EAAE;OACR;MACDC,YAAY,GAAGN,aAAa,CAACS,KAAK,CAAC;;EAEvC,CAAC,EACD;IAAEG,OAAO,EAAE;EAAI,CAAE,CAClB,EAEDf,gBAAgB,CACdW,MAAM,4CAEN;IACE,IAAI,CAACN,2BAA2B,IAAI,CAACS,gBAAgB,EAAE,EAAE;MACvDR,YAAY,CAACC,SAAS,GAAG,IAAI;;EAEjC,CAAC,EACD;IAAEQ,OAAO,EAAE;EAAI,CAAE,CAClB,EAEDf,gBAAgB,CACdW,MAAM,gCAEN,UAACC,KAAmB;IAClB,IAAIC,mBAAmB,CAACD,KAAK,CAAC,IAAIH,YAAY,EAAE;MAC9C;MACA,IAAMO,mBAAiB,GAAGV,YAAY;MACtCF,WAAW,CAACK,YAAY,EAAEG,KAAK,EAAE;QAAM,OAAAI,mBAAiB;MAAjB,CAAiB,CAAC;MACzDP,YAAY,GAAGQ,SAAS;;EAE5B,CAAC,EACD;IAAEF,OAAO,EAAE;EAAI,CAAE,CAClB,EAEDf,gBAAgB,CACdW,MAAM,uBAEN;IACEL,YAAY,CAACE,KAAK,GAAG,IAAI;EAC3B,CAAC,EACD;IAAEO,OAAO,EAAE;EAAI,CAAE,CAClB,CACF;EAED,OAAO;IACLG,IAAI,EAAE,SAAAA,CAAA;MACJR,SAAS,CAACS,OAAO,CAAC,UAACC,QAAQ;QAAK,OAAAA,QAAQ,CAACF,IAAI,EAAE;MAAf,CAAe,CAAC;IAClD;GACD;AACH;AAEA,SAASJ,gBAAgBA,CAAA;EACvB,IAAMP,SAAS,GAAGI,MAAM,CAACU,YAAY,EAAE;EACvC,OAAO,CAACd,SAAS,IAAIA,SAAS,CAACe,WAAW;AAC5C;AAEA,SAAST,mBAAmBA,CAACD,KAAmB;EAC9C,OACEA,KAAK,CAACW,MAAM,YAAYC,OAAO;EAC/B;EACA;EACAZ,KAAK,CAACa,SAAS,KAAK,KAAK;AAE7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}