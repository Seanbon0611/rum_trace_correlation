{"ast":null,"code":"import { Batch } from './batch';\nimport { createHttpRequest } from './httpRequest';\nexport function startBatchWithReplica(configuration, endpoint, reportError, pageExitObservable, replicaEndpoint) {\n  var primaryBatch = createBatch(endpoint);\n  var replicaBatch;\n  if (replicaEndpoint) {\n    replicaBatch = createBatch(replicaEndpoint);\n  }\n  function createBatch(endpointBuilder) {\n    return new Batch(createHttpRequest(endpointBuilder, configuration.batchBytesLimit, reportError), configuration.batchMessagesLimit, configuration.batchBytesLimit, configuration.messageBytesLimit, configuration.flushTimeout, pageExitObservable);\n  }\n  return {\n    add: function (message, replicated) {\n      if (replicated === void 0) {\n        replicated = true;\n      }\n      primaryBatch.add(message);\n      if (replicaBatch && replicated) {\n        replicaBatch.add(message);\n      }\n    }\n  };\n}","map":{"version":3,"names":["Batch","createHttpRequest","startBatchWithReplica","configuration","endpoint","reportError","pageExitObservable","replicaEndpoint","primaryBatch","createBatch","replicaBatch","endpointBuilder","batchBytesLimit","batchMessagesLimit","messageBytesLimit","flushTimeout","add","message","replicated"],"sources":["/Users/sean.dever/Desktop/PersonalRepos/apm-enablement-sessions/rum_and_trace_correlation/rum_app/node_modules/@datadog/browser-core/src/transport/startBatchWithReplica.ts"],"sourcesContent":["import type { Configuration, EndpointBuilder } from '../domain/configuration'\nimport type { RawError } from '../tools/error'\nimport type { Context } from '../tools/context'\nimport type { Observable } from '../tools/observable'\nimport type { PageExitEvent } from '../browser/pageExitObservable'\nimport { Batch } from './batch'\nimport { createHttpRequest } from './httpRequest'\n\nexport function startBatchWithReplica<T extends Context>(\n  configuration: Configuration,\n  endpoint: EndpointBuilder,\n  reportError: (error: RawError) => void,\n  pageExitObservable: Observable<PageExitEvent>,\n  replicaEndpoint?: EndpointBuilder\n) {\n  const primaryBatch = createBatch(endpoint)\n  let replicaBatch: Batch | undefined\n  if (replicaEndpoint) {\n    replicaBatch = createBatch(replicaEndpoint)\n  }\n\n  function createBatch(endpointBuilder: EndpointBuilder) {\n    return new Batch(\n      createHttpRequest(endpointBuilder, configuration.batchBytesLimit, reportError),\n      configuration.batchMessagesLimit,\n      configuration.batchBytesLimit,\n      configuration.messageBytesLimit,\n      configuration.flushTimeout,\n      pageExitObservable\n    )\n  }\n\n  return {\n    add(message: T, replicated = true) {\n      primaryBatch.add(message)\n      if (replicaBatch && replicated) {\n        replicaBatch.add(message)\n      }\n    },\n  }\n}\n"],"mappings":"AAKA,SAASA,KAAK,QAAQ,SAAS;AAC/B,SAASC,iBAAiB,QAAQ,eAAe;AAEjD,OAAM,SAAUC,qBAAqBA,CACnCC,aAA4B,EAC5BC,QAAyB,EACzBC,WAAsC,EACtCC,kBAA6C,EAC7CC,eAAiC;EAEjC,IAAMC,YAAY,GAAGC,WAAW,CAACL,QAAQ,CAAC;EAC1C,IAAIM,YAA+B;EACnC,IAAIH,eAAe,EAAE;IACnBG,YAAY,GAAGD,WAAW,CAACF,eAAe,CAAC;;EAG7C,SAASE,WAAWA,CAACE,eAAgC;IACnD,OAAO,IAAIX,KAAK,CACdC,iBAAiB,CAACU,eAAe,EAAER,aAAa,CAACS,eAAe,EAAEP,WAAW,CAAC,EAC9EF,aAAa,CAACU,kBAAkB,EAChCV,aAAa,CAACS,eAAe,EAC7BT,aAAa,CAACW,iBAAiB,EAC/BX,aAAa,CAACY,YAAY,EAC1BT,kBAAkB,CACnB;EACH;EAEA,OAAO;IACLU,GAAG,EAAH,SAAAA,CAAIC,OAAU,EAAEC,UAAiB;MAAjB,IAAAA,UAAA;QAAAA,UAAA,OAAiB;MAAA;MAC/BV,YAAY,CAACQ,GAAG,CAACC,OAAO,CAAC;MACzB,IAAIP,YAAY,IAAIQ,UAAU,EAAE;QAC9BR,YAAY,CAACM,GAAG,CAACC,OAAO,CAAC;;IAE7B;GACD;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}