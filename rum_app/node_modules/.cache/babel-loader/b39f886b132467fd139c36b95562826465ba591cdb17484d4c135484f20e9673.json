{"ast":null,"code":"var BUFFER_LIMIT = 500;\nvar BoundedBuffer = /** @class */function () {\n  function BoundedBuffer() {\n    this.buffer = [];\n  }\n  BoundedBuffer.prototype.add = function (callback) {\n    var length = this.buffer.push(callback);\n    if (length > BUFFER_LIMIT) {\n      this.buffer.splice(0, 1);\n    }\n  };\n  BoundedBuffer.prototype.drain = function () {\n    this.buffer.forEach(function (callback) {\n      return callback();\n    });\n    this.buffer.length = 0;\n  };\n  return BoundedBuffer;\n}();\nexport { BoundedBuffer };","map":{"version":3,"names":["BUFFER_LIMIT","BoundedBuffer","buffer","prototype","add","callback","length","push","splice","drain","forEach"],"sources":["/Users/sean.dever/Desktop/PersonalRepos/apm-enablement-sessions/rum_and_trace_correlation/rum_app/node_modules/@datadog/browser-core/src/tools/boundedBuffer.ts"],"sourcesContent":["const BUFFER_LIMIT = 500\n\nexport class BoundedBuffer {\n  private buffer: Array<() => void> = []\n\n  add(callback: () => void) {\n    const length = this.buffer.push(callback)\n    if (length > BUFFER_LIMIT) {\n      this.buffer.splice(0, 1)\n    }\n  }\n\n  drain() {\n    this.buffer.forEach((callback) => callback())\n    this.buffer.length = 0\n  }\n}\n"],"mappings":"AAAA,IAAMA,YAAY,GAAG,GAAG;AAExB,IAAAC,aAAA;EAAA,SAAAA,cAAA;IACU,KAAAC,MAAM,GAAsB,EAAE;EAaxC;EAXED,aAAA,CAAAE,SAAA,CAAAC,GAAG,GAAH,UAAIC,QAAoB;IACtB,IAAMC,MAAM,GAAG,IAAI,CAACJ,MAAM,CAACK,IAAI,CAACF,QAAQ,CAAC;IACzC,IAAIC,MAAM,GAAGN,YAAY,EAAE;MACzB,IAAI,CAACE,MAAM,CAACM,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;;EAE5B,CAAC;EAEDP,aAAA,CAAAE,SAAA,CAAAM,KAAK,GAAL;IACE,IAAI,CAACP,MAAM,CAACQ,OAAO,CAAC,UAACL,QAAQ;MAAK,OAAAA,QAAQ,EAAE;IAAV,CAAU,CAAC;IAC7C,IAAI,CAACH,MAAM,CAACI,MAAM,GAAG,CAAC;EACxB,CAAC;EACH,OAAAL,aAAC;AAAD,CAAC,EAdD"},"metadata":{},"sourceType":"module","externalDependencies":[]}